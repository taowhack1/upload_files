{"version":3,"sources":["components/authen/logo.svg","components/filetype/document.svg","components/filetype/jpg.svg","components/filetype/options.svg","components/filetype/pdf.svg","components/filetype/png.svg","components/filetype/powerpoint.svg","components/filetype/txt.svg","components/filetype/zip.svg","components/filetype/xls.svg","actions/types.js","reducers/folderReducer.js","reducers/fileReducer.js","reducers/authReducer.js","reducers/logReducer.js","reducers/searchReducer.js","reducers/index.js","store.js","actions/authActions.js","style/StyleFiles.js","components/authen/ChangePassword.js","components/menu/MenuNavbar.js","components/menu/MenuNavbarRespon.js","components/menu/MenuAdmin.js","actions/searchActions.js","components/layout/Navbar.js","components/layout/Circular.js","actions/folderActions.js","components/authen/Styles.js","components/authen/SignIn.js","components/files/ViewFolder.js","components/modal/AddFolder.js","components/modal/ConfirmDeleteFolder.js","components/menu/MenuFolder.js","components/files/ViewFolderAdmin.js","components/pages/Home.js","components/filetype/Filetypes.js","components/modal/Dropzone.js","components/modal/UploadBtn.js","style/StyleFilesClass.js","actions/fileActions.js","components/modal/ConfirmDowload.js","components/files/ViewFiles.js","components/authen/Registor.js","components/modal/ConfirmDeleteFiles.js","components/modal/ConfirmDeleteFile.js","components/modal/ConfirmDowloadAdmin.js","components/menu/MenuFile.js","components/files/ViewFilesAdmin.js","components/menu/MenuUser.js","components/menu/ManageUserSwitchAuth.js","components/files/ManageUserFirst.js","components/menu/MenuUserCheckUpload.js","components/files/ManageUserSecond.js","components/pages/Notfound.js","actions/logActions.js","components/history/HistoryUpload.js","components/history/HistoryDelete.js","components/search/SearchFiles.js","components/pages/Search.js","App.js","serviceWorker.js","index.js","components/menu/user.svg"],"names":["module","exports","SET_LOADING","initialState","folders","foldersadmin","current","loading","error","files","authenticated","authdata","user","users","userbyfolderid","updatestatus","updatestatususer","logs","logsdelete","searchfiles","combineReducers","folder","state","action","type","payload","file","auth","map","user_id","log","console","search","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","url","signOut","dispatch","localStorage","removeItem","getUser","userId","axios","get","then","res","data","getUserAll","a","fetch","json","updateActiveUser","snackAlert","updateType","config","headers","post","authorized_id","user_active","updateAccessFolder","click","success","access_download","access_upload","useStyles","makeStyles","theme","root","margin","spacing","paper","width","alignItems","boxShadow","color","padding","table","emptyTable","textAlign","iconFolderTable","fontSize","verticalAlign","marginRight","iconFilesTable","iconPersonTable","iconPersonTableUnActive","iconFolder","iconFiles","iconPerson","iconCheck","iconStar","marginTop","iconStarSmall","iconButton","iconSwitch","iconCheckBox","iconHistory","NavigateNextIcon","breadcrumbs","text","textmenuAdmin","marginLeft","textDate","opacity","menu","display","menuItem","tableMargin","tableCellName","tablePadding","padingTop","gridContainer","direction","justifyContent","iconAlign","fab","absolute","position","bottom","right","height","backgroundColor","icon","grid","textField","grey","outline","modal","modalPaper","palette","background","shadows","borderRadius","modalIconAlign","modalBtn","modalBtnUpload","marginBottom","modalbtnOk","modalbtnDownload","modalbtnCancel","modalbtnDel","modalbtnSave","upload","flexDirection","uploadFilesDropArea","uploadFilesDropAreaHighlight","uploadPreview","overflowY","uploadPreviewDisable","uploadPreviewList","uploadPreviewListIcon","cursor","zIndex","uploadPreviewListName","fontFamily","uploadPreviewCard","uploadPreviewBox","whiteSpace","removeBorder","borderBottom","errorText","errorTextRegistor","AppBar","menuButton","title","flexGrow","filetype","filetypeUpload","nowrapText","nowrap","nowrapTextMany","nowrapMany","rigth","formStyle","imgSize","input","AddFolder","props","classes","useState","open","setOpen","errorCheck","setErrorCheck","setError","useSelector","useDispatch","user_password","user_password_old","user_firstname","user_lastname","setUser","user_password_confirm","confirm","setConfirm","showPassword","values","setValues","handleClose","changePasswordSignOut","onChange","e","value","target","replace","name","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","Typography","onClick","closeMenu","Modal","className","disableAutoFocus","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Container","maxWidth","TextField","variant","required","fullWidth","id","placeholder","errorChecks_password_old","InputProps","endAdornment","InputAdornment","IconButton","aria-label","onMouseDown","error_password_old","errorChecks_password","error_password","errorChecks_password_confirm","error_password_confirm","style","Button","formIsValid","errors","errorChecks","length","handleValidation","swal","button","changePassword","elevation","MenuNavbar","React","anchorEl","setAnchorEl","currentTarget","src","UserImage","Menu","keepMounted","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","disabled","user_name","Divider","MenuNavbarRespon","MenuAdmin","top","left","setState","toggleDrawer","anchor","key","Fragment","Drawer","clsx","list","fullList","role","onKeyDown","List","ListItem","ListItemText","component","Link","to","ListItemIcon","searchFiles","shape","fade","common","white","breakpoints","up","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","Navbar","history","useHistory","setText","push","useEffect","handleSignOut","authLinks","Hidden","smDown","Toolbar","Grid","container","InputBase","inputProps","mdUp","AppbarRoot","Circular","CircularProgress","getAllFolder","deleteFolder","header","folder_id","delete","createFolder","folder_name","closeModal","updateFolder","folder_name_old","paddingTop","avatar","secondary","main","form","submit","SignIn","enqueueSnackbar","useSnackbar","msg","CssBaseline","ReactLogo","alt","onSubmit","response","user_login","user_login_active","setItem","JSON","stringify","user_data","getItem","signIn","noValidate","autoComplete","autoFocus","size","ViewFolder","Paper","Breadcrumbs","separator","Table","TableHead","TableCell","align","colSpan","TableBody","TableRow","pathname","moment","utc","folder_updated","add","format","Chip","CloudDownload","label","CloudUpload","setFolderName","handleAddFolderClose","handleChangeFolderName","slice","Tooltip","Fab","xsDown","item","xs","smUp","handleCreateFolder","ConfirmDelete","MenuFolder","setFolder","handleEditFolderClose","callback","handleMoreVertIconClose","sm","edit","ViewFolderAdmin","refresh","handleDeleteFolder","folderId","Home","page","setPage","Filetypes","typefile","filename","setType","indexOf","split","pop","checktype","Document","xlxs","PowerPoint","PDF","PNG","JPG","TXT","ZIP","Option","Dropzone","photos","setPost","filesUpload","setFilesUpload","highlight","setHighlight","handleFiles","photosArr","filesUploadArr","reader","FileReader","readAsDataURL","addEventListener","fileobj","result","handleUpload","formData","FormData","append","parseInt","i","set","file_data","UploadSucces","handleDelete","targetIndex","parentElement","dataset","imgindex","handleHighlight","stopPropagation","encType","onDragEnter","onDragOver","onDragLeave","onDrop","dataTransfer","multiple","htmlFor","index","Card","data-imgindex","Box","textOverflow","overflow","Icon","UploadBtn","handleOpen","bind","this","aria-labelledby","aria-describedby","Component","withStyles","download","fileId","method","responseType","URL","window","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","getFiles","deleteFile","userID","file_id","ConfirmDownload","fileid","count","ViewFiles","folderID","setFolderID","folderName","accessupload","setAccessUpload","accessdownload","setAccessDowload","location","hover","file_name","file_created","Registor","value1","setValue1","value2","setValue2","errorChecks_firstname","error_firstname","errorChecks_lastname","error_lastname","errorChecks_username","error_username","RadioGroup","FormControlLabel","checked","control","Radio","err","validation","close","addRegistor","updateUser","ConfirmDeleteFiles","listDelFiles","listDel","listDelFile","ConfirmDeleteFile","ConfirmDownloadAdmin","MenuFile","handleMoreVertIconClick","ViewFilesAdmin","selected","setSelected","setIndex","handleSelectClick","selectedIndex","newSelected","selectIndex","concat","check_status","updateList","Checkbox","MenuUser","userData","switchchecked","switchstatus","setSwitchstatus","handleChange","Switch","ManageUserSwitchAuth","ManageUserFirst","justify","MenuUserCheckUpload","folderData","checkedDownload","checkedUpload","handleDownloadClick","accessDownload","handleUploadClick","accessUpload","ManageUserSecond","setUserID","userfirstname","setFirstname","userActive","setUserActive","getAllFoldersAdmin","border","Notfound","setLoading","HistoryUpload","HistoryDelete","file_deleted","del_user_firstname","del_user_lastname","SearchFiles","Search","token","tokenParse","parse","createMuiTheme","typography","join","overrides","MuiTableCell","paddingBottom","manage","paddingRigth","App","ThemeProvider","maxSnack","exact","path","children","NotFound","isLocalhost","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","process","origin","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5429d4fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8528c927.svg\";","module.exports = __webpack_public_path__ + \"static/media/document.c72dfa70.svg\";","module.exports = __webpack_public_path__ + \"static/media/jpg.5ffbc9bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/options.e9b3fa5e.svg\";","module.exports = __webpack_public_path__ + \"static/media/pdf.3fa92281.svg\";","module.exports = __webpack_public_path__ + \"static/media/png.832ce32c.svg\";","module.exports = __webpack_public_path__ + \"static/media/powerpoint.6ef89bbb.svg\";","module.exports = __webpack_public_path__ + \"static/media/txt.89832898.svg\";","module.exports = __webpack_public_path__ + \"static/media/zip.1ead5aed.svg\";","module.exports = __webpack_public_path__ + \"static/media/xls.152573d4.svg\";","export const ADD_USER = 'ADD_USER';\r\nexport const GET_USER = 'GET_USER';\r\nexport const GET_USER_ALL = 'GET_USER_ALL';\r\nexport const GET_FOLDERS = 'GET_FOLDERS';\r\nexport const GET_FOLDERS_ADMIN = 'GET_FOLDERS_ADMIN';\r\nexport const UPDATE_FOLDER = 'UPDATE_FOLDER';\r\nexport const GET_FILES = 'GET_FILES';\r\nexport const ADD_FILE = 'ADD_FILE';\r\nexport const DELETE_FILE = 'DELETE_FILE';\r\nexport const DOWNLOAD_FILE = 'DOWNLOAD_FILE';\r\nexport const DELETE_FOLDER = 'DELETE_FOLDER';\r\nexport const ADD_FOLDER = 'ADD_FOLDER';\r\nexport const POSTS_ERROR = 'POSTS_ERROR';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const GET_COMMENTS = 'GET_COMMENTS';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\nexport const COMMENTS_ERROR = 'COMMENTS_ERROR';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const AUTH_USER = 'AUTH_USER';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const UNAUTH_USER = 'UNAUTH_USER';\r\nexport const GET_USER_BY_FOLDER_ID = 'GET_USER_BY_FOLDER_ID';\r\nexport const UPDATE_ACCESS_FOLDER = 'UPDATE_ACCESS_FOLDER';\r\nexport const UPDATE_ACTIVE_USER = 'UPDATE_ACTIVE_USER';\r\nexport const GET_LOGS = 'GET_LOGS';\r\nexport const GET_LOGS_DELETE = 'GET_LOGS_DELETE';\r\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\r\nexport const LOGS_ERROR = 'LOGS_ERROR';\r\nexport const SEARCH_FILES = 'SEARCH_FILES';\r\nexport const SEARCH_FILES_ERROR = 'SEARCH_FILES_ERROR';\r\nexport const CLEAR_SEARCH_FILES = 'CLEAR_SEARCH_FILES';\r\n","import {\r\n  GET_FOLDERS,\r\n  GET_FOLDERS_ADMIN,\r\n  ADD_FOLDER,\r\n  SET_LOADING,\r\n  POSTS_ERROR,\r\n  DELETE_FOLDER,\r\n  UPDATE_FOLDER,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  folders: null,\r\n  foldersadmin: null,\r\n  current: null,\r\n  loading: null,\r\n  error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_FOLDERS:\r\n      return {\r\n        ...state,\r\n        folders: action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_FOLDERS_ADMIN:\r\n      return {\r\n        ...state,\r\n        foldersadmin: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_FOLDER:\r\n      return {\r\n        ...state,\r\n        foldersadmin: state.foldersadmin === null ? [action.payload] : [action.payload, ...state.foldersadmin],\r\n        loading: false,\r\n      };\r\n    case UPDATE_FOLDER:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case DELETE_FOLDER:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case POSTS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_FILES,\r\n  ADD_FILE,\r\n  SET_LOADING,\r\n  DELETE_FILE,\r\n  DOWNLOAD_FILE,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  files: [],\r\n  current: null,\r\n  loading: null,\r\n  error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_FILES:\r\n      return {\r\n        ...state,\r\n        files: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_FILE:\r\n      return {\r\n        ...state,\r\n        files:\r\n          state.files === null\r\n            ? [action.payload]\r\n            : [action.payload, ...state.files],\r\n        loading: false,\r\n      };\r\n    case DELETE_FILE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case DOWNLOAD_FILE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  AUTH_USER,\r\n  UNAUTH_USER,\r\n  AUTH_ERROR,\r\n  SET_LOADING,\r\n  GET_USER_BY_FOLDER_ID,\r\n  UPDATE_ACCESS_FOLDER,\r\n  GET_USER,\r\n  GET_USER_ALL,\r\n  UPDATE_ACTIVE_USER,\r\n} from '../actions/types';\r\nconst initialState = {\r\n  authenticated: null,\r\n  authdata: null,\r\n  user: null,\r\n  users: null,\r\n  loading: null,\r\n  userbyfolderid: null,\r\n  error: null,\r\n  updatestatus: null,\r\n  updatestatususer: null,\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AUTH_USER:\r\n      return { ...state, authenticated: true, authdata: action.payload };\r\n    case UNAUTH_USER:\r\n      return { ...state, authenticated: false, authdata: null, error: null };\r\n    case AUTH_ERROR:\r\n      return { ...state, error: action.payload };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        user: action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_USER_ALL:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_USER_BY_FOLDER_ID:\r\n      return {\r\n        ...state,\r\n        userbyfolderid: action.payload,\r\n        loading: false,\r\n      };\r\n    case UPDATE_ACCESS_FOLDER:\r\n      return {\r\n        ...state,\r\n        updatestatus: action.payload,\r\n        loading: false,\r\n      };\r\n    case UPDATE_ACTIVE_USER:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user) =>\r\n          user.user_id === action.payload.user_id ? action.payload : user\r\n        ),\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  SEARCH_LOGS,\r\n  LOGS_ERROR,\r\n  GET_LOGS_DELETE,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  logs: null,\r\n  logsdelete: null,\r\n  current: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_LOGS_DELETE:\r\n      return {\r\n        ...state,\r\n        logsdelete: action.payload,\r\n        loading: false,\r\n      };\r\n    case SEARCH_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n      };\r\n\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case LOGS_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SEARCH_FILES,\r\n  SEARCH_FILES_ERROR,\r\n  SET_LOADING,\r\n  CLEAR_SEARCH_FILES,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  searchfiles: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_FILES:\r\n      return {\r\n        ...state,\r\n        searchfiles: action.payload,\r\n        loading: false,\r\n      };\r\n    case CLEAR_SEARCH_FILES:\r\n      return {\r\n        ...state,\r\n        searchfiles: null,\r\n        loading: false,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case SEARCH_FILES_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport folderReducer from './folderReducer';\r\nimport fileReducer from './fileReducer';\r\nimport authReducer from './authReducer';\r\nimport logReducer from './logReducer';\r\nimport searchReducer from './searchReducer';\r\n\r\nexport default combineReducers({\r\n  folder: folderReducer,\r\n  file: fileReducer,\r\n  auth: authReducer,\r\n  log: logReducer,\r\n  search: searchReducer,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport {\r\n  AUTH_USER,\r\n  UNAUTH_USER,\r\n  AUTH_ERROR,\r\n  SET_LOADING,\r\n  GET_USER_BY_FOLDER_ID,\r\n  UPDATE_ACCESS_FOLDER,\r\n  GET_USER,\r\n  GET_USER_ALL,\r\n  UPDATE_ACTIVE_USER,\r\n} from '../actions/types';\r\nconst url = 'http://192.168.5.230:8080/upload';\r\nexport const signOut = () => {\r\n  return (dispatch) => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('authData');\r\n    localStorage.removeItem('user_id');\r\n    dispatch({ type: UNAUTH_USER });\r\n  };\r\n};\r\n\r\nexport const signIn = (user, snackAlert) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  try {\r\n    const response = await axios.post(`${url}/login`, user, config);\r\n    if (response.data.user_login) {\r\n      if (response.data.user_login_active === false) {\r\n        snackAlert(\r\n          'คุณถูกระงับการใช้งานชั่วคราว โปรดติดต่อผู้ดูแลระบบ',\r\n          'error'\r\n        );\r\n      } else {\r\n        localStorage.setItem(\r\n          'authData',\r\n          JSON.stringify(response.data.user_data)\r\n        );\r\n        localStorage.setItem('user_id', response.data.user_data.user_id);\r\n        const token = localStorage.getItem('authData');\r\n        dispatch({\r\n          type: AUTH_USER,\r\n          payload: response.data.user_data,\r\n        });\r\n      }\r\n    } else {\r\n      snackAlert('ชื่อผู้ใช้งาน หรือ รหัสผ่าน ไม่ถูกต้อง!', 'error');\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n      payload: err,\r\n    });\r\n    snackAlert(err);\r\n  }\r\n};\r\n\r\nexport const getUser = (userId) => (dispatch) =>\r\n  axios\r\n    .get(`http://192.168.5.230:8080/upload/user/user_id=${userId}`)\r\n    .then((res) =>\r\n      dispatch({\r\n        type: GET_USER,\r\n        payload: res.data,\r\n      })\r\n    );\r\n\r\nexport const getUserAll = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: SET_LOADING,\r\n    });\r\n\r\n    const res = await fetch(`${url}/userall`);\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: GET_USER_ALL,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    console.log('Error');\r\n  }\r\n};\r\n\r\nexport const getUserByFolderId = (folder_id) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: SET_LOADING,\r\n    });\r\n\r\n    const res = await fetch(`${url}/accessuser/folder_id=${folder_id}`);\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: GET_USER_BY_FOLDER_ID,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    console.log('Error');\r\n  }\r\n};\r\n\r\nexport const updateActiveUser = (user, snackAlert, updateType) => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.post(`${url}/admin/user/update`, user, config);\r\n    console.log(updateType);\r\n    dispatch({\r\n      type: UPDATE_ACTIVE_USER,\r\n      payload: res.data,\r\n    });\r\n    if (updateType === 'updateAuth') {\r\n      if (user.authorized_id === 2) {\r\n        snackAlert('สิทธิ์การใช้งานผู้ดูแลระบบ', 'success');\r\n      } else {\r\n        snackAlert('สิทธิ์การใช้งานผู้ใช้งาน', 'info');\r\n      }\r\n    }\r\n    if (updateType === 'updateActive') {\r\n      if (user.user_active) {\r\n        snackAlert('เปิด สิทธิ์การใช้งาน', 'success');\r\n      } else {\r\n        snackAlert('ปิด สิทธิ์การใช้งาน', 'info');\r\n      }\r\n    }\r\n\r\n    // } else {\r\n    //   snackAlert('ปิด สิทธิ์การใช้งาน', 'info');\r\n    // }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n      payload: err,\r\n    });\r\n    snackAlert('พบข้อผิดพลาด', 'error');\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const updateAccessFolder = (user, snackAlert, click) => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.post(\r\n      `${url}/admin/accessfolder/realtime`,\r\n      user,\r\n      config\r\n    );\r\n    if (res.data.success) {\r\n      dispatch({\r\n        type: UPDATE_ACCESS_FOLDER,\r\n        payload: res.data,\r\n      });\r\n      console.log(click);\r\n      if (click === 'download') {\r\n        user.access_download\r\n          ? snackAlert('เปิด สิทธิ์การใช้งานดาวน์โหลด', 'success')\r\n          : snackAlert('ปิด สิทธิ์การใช้งานดาวน์โหลด', 'info');\r\n      }\r\n      if (click === 'upload') {\r\n        user.access_upload\r\n          ? snackAlert('เปิด สิทธิ์การใช้งานอัพโหลด', 'success')\r\n          : snackAlert('ปิด สิทธิ์การใช้งานอัพโหลด', 'info');\r\n      }\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n      payload: err,\r\n    });\r\n    snackAlert(err);\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const addRegistor = (user, snackAlert, refresh, close) => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.post(`${url}/user`, user, config);\r\n    console.log(res.data);\r\n    if (res.data.success) {\r\n      snackAlert('เพิ่มผู้ใช้งานสำเร็จ', 'success');\r\n      close();\r\n      refresh();\r\n    } else if (!res.data.success) {\r\n      snackAlert('ชื่อผู้ใช้งานมีอยู่ในระบบแล้ว', 'warning');\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\nexport const changePassword = (user, changePasswordSignOut) => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  console.log(user);\r\n  try {\r\n    const res = await axios.post(`${url}/user/update`, user, config);\r\n    if (res.data.success) {\r\n      swal({\r\n        title: 'เปลี่ยนรหัสผ่านแล้ว',\r\n        icon: 'success',\r\n        button: 'เข้าสู่ระบบ',\r\n      }).then((click) => {\r\n        click && changePasswordSignOut();\r\n      });\r\n    } else if (!res.data.success) {\r\n      swal({\r\n        title: 'รหัสผ่านเดิมไม่ถูกต้อง',\r\n        icon: 'error',\r\n        button: 'ลองใหม่',\r\n      });\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const setLoading = () => async (dispatch) => {\r\n  dispatch({\r\n    type: SET_LOADING,\r\n  });\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport MuiTableCell from \"@material-ui/core/TableCell\";\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { yellow, grey } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(4, 0, 1, 0),\r\n  },\r\n  paper: {\r\n    width: \"90%\",\r\n    alignItems: 'center',\r\n    boxShadow: \"0 0 0 0\",\r\n    color: \"white\",\r\n    ['@media (max-width:600px)']: {\r\n      width: \"100%\",\r\n      padding: theme.spacing(0, 0, 0, 0),\r\n    },\r\n  },\r\n\r\n  table: {\r\n    width: \"100%\",\r\n    //padding: theme.spacing(0, 0, 0, 0),\r\n  },\r\n  emptyTable: {\r\n    textAlign: \"center\",\r\n    color: \"#a0a0a0\",\r\n  },\r\n  //icon\r\n  iconFolderTable: {\r\n    fontSize: 35,\r\n    color: \"#FCD462\",\r\n    verticalAlign: \"middle\",\r\n    marginRight: 8\r\n  },\r\n  iconFilesTable: {\r\n    fontSize: 35,\r\n    color: \"#1976D2\",\r\n    verticalAlign: \"middle\",\r\n    marginRight: 8\r\n  },\r\n  iconPersonTable: {\r\n    color: \"#FDC8A2\",\r\n    fontSize: 35,\r\n    verticalAlign: \"middle\",\r\n    marginRight: 8,\r\n\r\n  },\r\n  iconPersonTableUnActive: {\r\n    color: \"#DDDBDB\",\r\n    fontSize: 35,\r\n    verticalAlign: \"middle\",\r\n    marginRight: 8,\r\n\r\n  },\r\n  iconFolder: {\r\n    fontSize: 40,\r\n    color: \"#FCD462\",\r\n    verticalAlign: \"middle\",\r\n    margin: theme.spacing(0, 0, 0, -2),\r\n  },\r\n  iconFiles: {\r\n    fontSize: 40,\r\n    color: \"#1976D2\",\r\n    verticalAlign: \"middle\",\r\n    margin: theme.spacing(0, 0, 0, -2),\r\n  },\r\n  iconPerson: {\r\n    margin: theme.spacing(0, 0, 0, -2),\r\n    color: \"#FDC8A2\",\r\n    fontSize: 40,\r\n    verticalAlign: \"middle\",\r\n  },\r\n  iconCheck: {\r\n    margin: theme.spacing(0.5, 0, 0, -1),\r\n    fontSize: 40,\r\n  },\r\n  iconStar: {\r\n    color: \"#FFC107\",\r\n    marginTop: 3,\r\n    fontSize: 16,\r\n  },\r\n  iconStarSmall: {\r\n    fontSize: 13,\r\n    color: \"#FFC107\",\r\n    marginTop: 3\r\n  },\r\n  iconButton: {\r\n    padding: theme.spacing(0, 0, 0, 0),\r\n  },\r\n  iconSwitch: {\r\n    padding: theme.spacing(10, 0, 10, 0),\r\n  },\r\n  iconCheckBox: {\r\n    margin: theme.spacing(0, 0, 0, 0),\r\n    padding: theme.spacing(0, 0, 0, 1)\r\n  },\r\n  iconHistory: {\r\n    fontSize: 12,\r\n\r\n    marginTop: 5,\r\n    marginRight: 3\r\n  },\r\n  NavigateNextIcon: {\r\n    fontSize: 20,\r\n  },\r\n  breadcrumbs: {\r\n    margin: theme.spacing(2, 0, 2, 0),\r\n    ['@media (max-width:600px)']: {\r\n      margin: theme.spacing(2, 0, 2, 2),\r\n    },\r\n  },\r\n  text: {\r\n    fontSize: 16,\r\n    color: \"#000000\",\r\n\r\n  },\r\n  textmenuAdmin: {\r\n    fontSize: 14,\r\n    color: \"#000000\",\r\n    marginLeft: -10\r\n  },\r\n  textDate: {\r\n    fontSize: 14,\r\n    color: \"#000000\",\r\n    opacity: 0.7,\r\n    ['@media (max-width:321px)']: { // eslint-disable-line no-useless-computed-key\r\n      fontSize: 11,\r\n    },\r\n  },\r\n\r\n  menu: {\r\n    display: \"flex\",\r\n    width: 250,\r\n    ['@media (max-width:600px)']: { // eslint-disable-line no-useless-computed-key\r\n      width: 300,\r\n    },\r\n  },\r\n  menuItem: {\r\n    margin: theme.spacing(0, 0, 0, -2),\r\n    ['@media (max-width:600px)']: { // eslint-disable-line no-useless-computed-key\r\n      padding: theme.spacing(0, 0, 0, 0),\r\n    },\r\n  },\r\n  tableMargin: {\r\n    margin: theme.spacing(-1, 0, -1, 0),\r\n  },\r\n\r\n  opacity: {\r\n    color: \"#000000\",\r\n    fontSize: 16,\r\n    opacity: 0.7,\r\n  },\r\n  tableCellName: {\r\n    width: \"50%\",\r\n    textAlign: \"center\",\r\n  },\r\n  tablePadding: {\r\n    padingTop: -100\r\n  },\r\n  gridContainer: {\r\n    direction: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  iconAlign: {\r\n    direction: \"row\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 0, 0, 0),\r\n    margin: theme.spacing(-0.5, 0, -0.5, 0),\r\n  },\r\n  fab: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  absolute: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing(8),\r\n    right: theme.spacing(8),\r\n    height: 100,\r\n    width: 100,\r\n    backgroundColor: \"#1976D2\",\r\n    ['@media (max-width:600px)']: {\r\n      bottom: theme.spacing(4),\r\n      right: theme.spacing(4),\r\n      height: 80,\r\n      width: 80,\r\n    },\r\n  },\r\n  icon: {\r\n    fontSize: 50,\r\n    ['@media (max-width:600px)']: {\r\n      fontSize: 40,\r\n    },\r\n  },\r\n  grid: {\r\n    marginTop: 25,\r\n  },\r\n  textField: {\r\n    width: \"100%\",\r\n    backgroundColor: grey[300],\r\n    outline: \"none\",\r\n  },\r\n\r\n  //modal\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  modalPaper: {\r\n    width: 600,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[3],\r\n    borderRadius: 4,\r\n    outline: \"none\",\r\n    padding: theme.spacing(1, 5, 4),\r\n    ['@media (max-width:730px)']: { // eslint-disable-line no-useless-computed-key\r\n      width: 400\r\n    },\r\n    ['@media (max-width:600px)']: { // eslint-disable-line no-useless-computed-key\r\n      width: 260,\r\n    },\r\n    ['@media (max-width:400px)']: { // eslint-disable-line no-useless-computed-key\r\n      width: 240\r\n    },\r\n    ['@media (max-width:350px)']: { // eslint-disable-line no-useless-computed-key\r\n      width: 230\r\n    },\r\n  },\r\n  modalIconAlign: {\r\n    direction: \"row\",\r\n    alignItems: \"center\",\r\n    margin: theme.spacing(3, 0, 0, 0),\r\n  },\r\n\r\n  modalBtn: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: theme.spacing(4),\r\n  },\r\n\r\n  modalBtnUpload: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(-5),\r\n    ['@media (max-width:600px)']: { // eslint-disable-line no-useless-computed-key\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  modalbtnOk: {\r\n    padding: theme.spacing(1, 7, 1),\r\n  },\r\n  modalbtnDownload: {\r\n    padding: theme.spacing(1, 2, 1),\r\n  },\r\n  modalbtnCancel: {\r\n    padding: theme.spacing(1, 4.5, 1),\r\n  },\r\n  modalbtnDel: {\r\n    padding: theme.spacing(1, 4.5, 1),\r\n  },\r\n  modalbtnSave: {\r\n    padding: theme.spacing(1, 6, 1),\r\n  },\r\n  upload: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    position: \"relative\",\r\n  },\r\n  uploadFilesDropArea: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  uploadFilesDropAreaHighlight: {\r\n    backgroundColor: \"#1976D2\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  uploadPreview: {\r\n    overflowY: \"auto\",\r\n    height: 200,\r\n    marginTop: 20,\r\n    ['@media (max-width:600px)']: { // eslint-disable-line no-useless-computed-key\r\n      height: 150,\r\n    },\r\n  },\r\n  uploadPreviewDisable: {\r\n    overflowY: \"auto\",\r\n    marginTop: 20,\r\n  },\r\n  uploadPreviewList: {\r\n    alignItems: \"center\",\r\n  },\r\n  uploadPreviewListIcon: {\r\n    margin: theme.spacing(0, 3, 0, 1),\r\n    fontSize: \"20px\",\r\n    alignItems: \"center\",\r\n    padding: 8,\r\n    color: \"#707070\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"50%\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#F5F5F5\",\r\n    },\r\n    zIndex: 999,\r\n  },\r\n\r\n  uploadPreviewListName: {\r\n    fontFamily: \"Sarabun\",\r\n    margin: theme.spacing(-1, 3, -1, 3),\r\n    alignItems: \"center\",\r\n    width: 270,\r\n    fontSize: 20,\r\n  },\r\n  uploadPreviewCard: {\r\n    margin: theme.spacing(1, 2, 1, 2),\r\n    padding: theme.spacing(-1, 0, -1, 0),\r\n  },\r\n  uploadPreviewBox: {\r\n    width: 300,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n\r\n  loading: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: 30,\r\n  },\r\n  removeBorder: {\r\n    borderBottom: \"0px\",\r\n  },\r\n  errorText: {\r\n    fontSize: 13,\r\n    color: \"red\",\r\n    margin: theme.spacing(0, 0, 0, 2),\r\n  },\r\n  errorTextRegistor: {\r\n    fontSize: 13,\r\n    color: \"red\",\r\n    margin: theme.spacing(1, 0, 0, 2),\r\n  },\r\n  AppBar: {\r\n    backgroundColor: '#1976D2',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    color: '#FFFFFF',\r\n    fontSize: 20,\r\n    marginRight: 30,\r\n    ['@media (max-width:1050px)']: { // eslint-disable-line no-useless-computed-key\r\n      marginRight: 20,\r\n    },\r\n  },\r\n  filetype: {\r\n    width: 30,\r\n    verticalAlign: 'middle',\r\n    marginRight: 8,\r\n    marginTop: 2\r\n  },\r\n  filetypeUpload: {\r\n    width: 35,\r\n    verticalAlign: 'middle'\r\n  },\r\n  nowrapText: {\r\n    fontSize: 16,\r\n    width: 400,\r\n    color: \"#000000\",\r\n    ['@media (max-width:1083px)']: {\r\n      width: 350,\r\n    },\r\n    ['@media (max-width:600px)']: {\r\n      width: 200,\r\n    },\r\n    ['@media (max-width:400px)']: {\r\n      width: 140,\r\n    },\r\n    ['@media (max-width:321px)']: { // eslint-disable-line no-useless-computed-key\r\n      width: 100,\r\n    },\r\n  },\r\n  nowrap: {\r\n    width: 410,\r\n    whiteSpace: \"nowrap\",\r\n    ['@media (max-width:1083px)']: {\r\n      width: 360,\r\n    },\r\n    ['@media (max-width:600px)']: {\r\n      width: 210,\r\n    },\r\n    ['@media (max-width:400px)']: {\r\n      width: 150,\r\n    },\r\n    ['@media (max-width:321px)']: { // eslint-disable-line no-useless-computed-key\r\n      width: 110,\r\n    },\r\n  },\r\n  nowrapTextMany: {\r\n    fontSize: 16,\r\n    width: 400,\r\n    color: \"#000000\",\r\n    ['@media (max-width:1083px)']: {\r\n      width: 350,\r\n    },\r\n    ['@media (max-width:650px)']: {\r\n      width: 200,\r\n    },\r\n    ['@media (max-width:450px)']: {\r\n      width: 140,\r\n    },\r\n    ['@media (max-width:321px)']: { // eslint-disable-line no-useless-computed-key\r\n      width: 90,\r\n    },\r\n  },\r\n  nowrapMany: {\r\n    width: 410,\r\n    whiteSpace: \"nowrap\",\r\n    ['@media (max-width:1083px)']: {\r\n      width: 360,\r\n    },\r\n    ['@media (max-width:650px)']: {\r\n      width: 210,\r\n    },\r\n    ['@media (max-width:450px)']: {\r\n      width: 150,\r\n    },\r\n    ['@media (max-width:371px)']: { // eslint-disable-line no-useless-computed-key\r\n      width: 100,\r\n    },\r\n  },\r\n  rigth: {\r\n    marginLeft: 20\r\n  },\r\n\r\n  formStyle: {\r\n    marginTop: 10,\r\n    marginRight: 10,\r\n    marginLeft: 10,\r\n    ['@media (max-width:600px)']: {\r\n      marginRight: -20,\r\n      marginLeft: -20,\r\n    },\r\n  },\r\n  imgSize: {\r\n    width: 50\r\n  },\r\n\r\n\r\n  input: {\r\n    \"&::placeholder\": {\r\n      fontSize: 16,\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nexport default useStyles;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Modal, Typography, Container } from \"@material-ui/core\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport useStyles from \"../../style/StyleFiles\";\r\nimport { signOut, changePassword } from \"../../actions/authActions\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport \"./style.css\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function AddFolder(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [errorCheck, setErrorCheck] = useState({});\r\n  const [error, setError] = useState({});\r\n  const { authenticated, authdata } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const [user, setUser] = useState({\r\n    user_id: authdata.user_id,\r\n    user_password: \"\",\r\n    user_password_old: \"\",\r\n    user_firstname: authdata.user_firstname,\r\n    user_lastname: authdata.user_lastname,\r\n  });\r\n\r\n  const [confirm, setConfirm] = useState({\r\n    user_password_confirm: \"\",\r\n  });\r\n  const [values, setValues] = useState({\r\n    showPassword: false,\r\n  });\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    let users = {\r\n      user_id: authdata.user_id,\r\n      user_password: \"\",\r\n      user_password_old: \"\",\r\n      user_firstname: authdata.user_firstname,\r\n      user_lastname: authdata.user_lastname,\r\n    };\r\n    setUser({ ...user, ...users });\r\n    setConfirm({ ...confirm, user_password_confirm: \"\" });\r\n    setErrorCheck({});\r\n    setError({});\r\n    setValues({ ...values, showPassword: false });\r\n  };\r\n\r\n  const handleValidation = (e) => {\r\n    let formIsValid = true;\r\n    let errors = {\r\n      error_password: \"\",\r\n      error_password_old: \"\",\r\n      error_password_confirm: \"\",\r\n    };\r\n    let errorChecks = {\r\n      errorChecks_password: false,\r\n      errorChecks_password_old: false,\r\n      errorChecks_password_confirm: false,\r\n    };\r\n    if (user.user_password_old.length == 0) {\r\n      formIsValid = false;\r\n      errorChecks.errorChecks_password_old = true;\r\n      errors.error_password_old = \"กรุณากรอกรหัสผ่านเดิม\";\r\n    }\r\n    if (user.user_password.length <= 7) {\r\n      formIsValid = false;\r\n      errorChecks.errorChecks_password = true;\r\n      errors.error_password = \"รหัสผ่านต้องมากกว่า 8 ตัว\";\r\n    }\r\n    if (user.user_password.length == 0) {\r\n      formIsValid = false;\r\n      errorChecks.errorChecks_password = true;\r\n      errors.error_password = \"กรุณากรอกรหัสผ่านใหม่\";\r\n    }\r\n    if (confirm.user_password_confirm.length == 0) {\r\n      formIsValid = false;\r\n      errorChecks.errorChecks_password_confirm = true;\r\n      errors.error_password_confirm = \"กรุณากรอกรหัสผ่านเพื่อยืนยันอีกครั้ง\";\r\n    }\r\n    if (\r\n      user.user_password != confirm.user_password_confirm &&\r\n      confirm.user_password_confirm.length != 0 &&\r\n      user.user_password.length != 0\r\n    ) {\r\n      formIsValid = false;\r\n      errorChecks.errorChecks_password_confirm = true;\r\n      errors.error_password_confirm = \"รหัสผ่านไม่ตรงกัน\";\r\n    }\r\n    setErrorCheck({ ...errorCheck, ...errorChecks });\r\n    setError({ ...error, ...errors });\r\n    return formIsValid;\r\n  };\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n    props.closeMenu();\r\n  };\r\n\r\n  const handleOpenAlert = () => {\r\n    setOpenAlert(true);\r\n  };\r\n\r\n  const changePasswordSignOut = () => {\r\n    dispatch(signOut());\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    let value = e.target.value.replace(/[^A-Za-z\\d]/gi, \"\");\r\n    setUser({ ...user, [e.target.name]: value });\r\n  };\r\n  const onChangePass = (e) => {\r\n    let value = e.target.value.replace(/[^A-Za-z\\d]/gi, \"\");\r\n    setConfirm({ ...confirm, [e.target.name]: value });\r\n  };\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const err = handleValidation();\r\n\r\n    if (err) {\r\n      dispatch(changePassword(user, changePasswordSignOut));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography onClick={handleOpen} color=\"textPrimary\">\r\n        เปลี่ยนรหัสผ่าน\r\n      </Typography>\r\n      <Modal\r\n        className={classes.modal}\r\n        disableAutoFocus={true}\r\n        outline=\"none\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.modalPaper}>\r\n            <div className={classes.root}>\r\n              <Typography className={classes.text}>เปลี่ยนรหัสผ่าน</Typography>\r\n              <Container maxWidth=\"xs\">\r\n                <form className={classes.formStyle}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"user_password_old\"\r\n                    placeholder=\"รหัสผ่านปัจจุบัน\"\r\n                    name=\"user_password_old\"\r\n                    type={values.showPassword ? \"text\" : \"password\"}\r\n                    onChange={(e) => onChange(e)}\r\n                    value={user.user_password_old}\r\n                    error={errorCheck.errorChecks_password_old}\r\n                    className={classes.textField}\r\n                    InputProps={{\r\n                      className: classes.input,\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={handleClickShowPassword}\r\n                            onMouseDown={handleMouseDownPassword}\r\n                          >\r\n                            {values.showPassword ? (\r\n                              <Visibility />\r\n                            ) : (\r\n                                <VisibilityOff />\r\n                              )}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                  <Typography className={classes.errorText}>\r\n                    {error.error_password_old}\r\n                  </Typography>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"user_password\"\r\n                    placeholder=\"รหัสผ่านใหม่\"\r\n                    type={values.showPassword ? \"text\" : \"password\"}\r\n                    id=\"user_password\"\r\n                    onChange={(e) => onChange(e)}\r\n                    value={user.user_password}\r\n                    error={errorCheck.errorChecks_password}\r\n                    className={classes.textField}\r\n                    InputProps={{\r\n                      className: classes.input,\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={handleClickShowPassword}\r\n                            onMouseDown={handleMouseDownPassword}\r\n                          >\r\n                            {values.showPassword ? (\r\n                              <Visibility />\r\n                            ) : (\r\n                                <VisibilityOff />\r\n                              )}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                  <Typography className={classes.errorText}>\r\n                    {error.error_password}\r\n                  </Typography>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    type={values.showPassword ? \"text\" : \"password\"}\r\n                    name=\"user_password_confirm\"\r\n                    placeholder=\"ยืนยันรหัสผ่านใหม่\"\r\n                    id=\"user_password_confirm\"\r\n                    onChange={onChangePass}\r\n                    value={confirm.user_password_confirm}\r\n                    error={errorCheck.errorChecks_password_confirm}\r\n                    className={classes.textField}\r\n                    InputProps={{\r\n                      className: classes.input,\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={handleClickShowPassword}\r\n                            onMouseDown={handleMouseDownPassword}\r\n                          >\r\n                            {values.showPassword ? (\r\n                              <Visibility />\r\n                            ) : (\r\n                                <VisibilityOff />\r\n                              )}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                  <Typography className={classes.errorText}>\r\n                    {error.error_password_confirm}\r\n                  </Typography>\r\n                  <div className={classes.modalBtn} style={{ marginTop: 5 }}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      className={classes.modalbtnSave}\r\n                      onClick={handleSubmit}\r\n                    >\r\n                      <Typography\r\n                        className={classes.text}\r\n                        color=\"textPrimary\"\r\n                        elevation={0}\r\n                      >\r\n                        บันทึก\r\n                      </Typography>\r\n                    </Button>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      className={classes.modalbtnCancel}\r\n                      onClick={handleClose}\r\n                    >\r\n                      <Typography className={classes.text} color=\"textPrimary\">\r\n                        ยกเลิก\r\n                      </Typography>\r\n                    </Button>\r\n                  </div>\r\n                </form>\r\n              </Container>\r\n            </div>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Typography, Menu, MenuItem, IconButton } from \"@material-ui/core/\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useStyles from \"../../style/StyleFiles\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport ChangePassword from \"../authen/ChangePassword\";\r\nimport UserImage from \"./user.svg\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst MenuNavbar = (props) => {\r\n  //test Github\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const handleOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const { authenticated, authdata } = useSelector((state) => state.auth);\r\n  return (\r\n    <div>\r\n      <IconButton className={classes.imgSize} onClick={handleOpen}>\r\n        <img src={UserImage} />\r\n      </IconButton>\r\n      <Menu\r\n        className={classes.menu}\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem disabled>\r\n          <Typography>{authdata.user_name}</Typography>\r\n        </MenuItem>\r\n        <Divider />\r\n        <MenuItem>\r\n          <Typography variant=\"inherit\">\r\n            <ChangePassword closeMenu={handleClose} />\r\n          </Typography>\r\n        </MenuItem>\r\n        <MenuItem onClick={props.signOut}>\r\n          <Typography variant=\"inherit\">ออกจากระบบ</Typography>\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\nexport default MenuNavbar;\r\n","import React from \"react\";\r\n\r\nimport { Typography, Menu, MenuItem, IconButton } from \"@material-ui/core/\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useStyles from \"../../style/StyleFiles\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport ChangePassword from \"../authen/ChangePassword\";\r\nimport UserImage from \"./user.svg\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst MenuNavbarRespon = (props) => {\r\n  //test Github\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const handleOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const { authenticated, authdata } = useSelector((state) => state.auth);\r\n  return (\r\n    <div>\r\n      <IconButton className={classes.imgSize} onClick={handleOpen}>\r\n        <img src={UserImage} />\r\n      </IconButton>\r\n      <Menu\r\n        className={classes.menu}\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem disabled>\r\n          <Typography>{authdata.user_name}</Typography>\r\n        </MenuItem>\r\n        <Divider />\r\n        <MenuItem>\r\n          <Typography variant=\"inherit\">\r\n            <ChangePassword closeMenu={handleClose} />\r\n          </Typography>\r\n        </MenuItem>\r\n        <MenuItem onClick={props.signOut}>\r\n          <Typography variant=\"inherit\">ออกจากระบบ</Typography>\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\nexport default MenuNavbarRespon;\r\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Typography, Menu, MenuItem, IconButton } from \"@material-ui/core/\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useStyles from \"../../style/StyleFiles\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport ChangePassword from \"../authen/ChangePassword\";\r\nimport UserImage from \"./user.svg\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\n\r\nconst MenuAdmin = (props) => {\r\n    //test Github\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const handleOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const [state, setState] = React.useState({\r\n        top: false,\r\n        left: false,\r\n        bottom: false,\r\n        right: false,\r\n    });\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n    const list = (anchor) => (\r\n        <div\r\n            className={clsx(classes.list, {\r\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n            })}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <List>\r\n                <ListItem button>\r\n                    <ListItemText>\r\n                        <Typography\r\n                            className={classes.text}\r\n                        >ระบบจัดการเอกสารออนไลน์\r\n                        </Typography>\r\n                    </ListItemText>\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem button component={Link}\r\n                    to='/viewfolderadmin'>\r\n                    <ListItemIcon >\r\n                        <FolderIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText>\r\n                        <Typography\r\n                            className={classes.textmenuAdmin}\r\n\r\n                        >จัดการโฟลเดอร์\r\n                        </Typography>\r\n                    </ListItemText>\r\n                </ListItem>\r\n                <ListItem button component={Link}\r\n                    to='/manageuserfirst'>\r\n                    <ListItemIcon>\r\n                        <PersonIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText>\r\n                        <Typography\r\n                            className={classes.textmenuAdmin}\r\n\r\n                        >\r\n                            จัดการผู้ใช้งาน\r\n                        </Typography>\r\n                    </ListItemText>\r\n                </ListItem>\r\n                <ListItem button component={Link}\r\n                    to='/historyupload'\r\n                >\r\n                    <ListItemIcon>\r\n                        <HistoryIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText>\r\n                        <Typography\r\n                            className={classes.textmenuAdmin}\r\n                        >ประวัติการอัพโหลด</Typography>\r\n                    </ListItemText>\r\n                </ListItem>\r\n                <ListItem button component={Link}\r\n                    to='/historydelete'>\r\n                    <ListItemIcon>\r\n                        <HistoryIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText>\r\n                        <Typography\r\n                            className={classes.textmenuAdmin}\r\n                        >ประวัติการลบไฟล์</Typography>\r\n                    </ListItemText>\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    const { authenticated, authdata } = useSelector((state) => state.auth);\r\n    return (\r\n        <div>\r\n            <div>\r\n                {['left'].map((anchor) => (\r\n                    <React.Fragment key={anchor}>\r\n                        <IconButton onClick={toggleDrawer(anchor, true)}>\r\n                            <MenuIcon style={{ color: 'white' }}></MenuIcon>\r\n                        </IconButton>\r\n                        <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)} >\r\n                            {list(anchor)}\r\n                        </Drawer>\r\n                    </React.Fragment>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default MenuAdmin;\r\n","import { SEARCH_FILES, SET_LOADING, CLEAR_SEARCH_FILES } from './types';\r\nimport axios from 'axios';\r\nconst url = 'http://192.168.5.230:8080';\r\n\r\nexport const searchFiles = (userId, text) => async (dispatch) => {\r\n  // dispatch({\r\n  //   type: SET_LOADING,\r\n  // });\r\n\r\n  const res = await axios.get(\r\n    `${url}/search/user_id=${userId}/file_name=${text}`\r\n  );\r\n\r\n  dispatch({\r\n    type: SEARCH_FILES,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const clearSearchFiles = () => (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_SEARCH_FILES,\r\n  });\r\n};\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signOut } from '../../actions/authActions';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { MenuItem, Grid, Icon } from '@material-ui/core';\r\nimport MenuNavbar from '../menu/MenuNavbar';\r\nimport MenuNavbarRespon from '../menu/MenuNavbarRespon';\r\nimport MenuAdmin from '../menu/MenuAdmin';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { searchFiles, clearSearchFiles } from '../../actions/searchActions';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  AppBar: {\r\n    backgroundColor: '#1976D2',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    color: '#FFFFFF',\r\n    fontSize: 20,\r\n    marginRight: 30,\r\n    ['@media (max-width:1050px)']: { // eslint-disable-line no-useless-computed-key\r\n      marginRight: 20,\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Navbar = () => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const { authenticated, authdata } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const [auth, setAuth] = useState(true);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const [text, setText] = useState('');\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n    history.push('/search');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (text !== '') {\r\n      dispatch(searchFiles(authdata.user_id, text));\r\n    } else {\r\n      dispatch(clearSearchFiles());\r\n      history.push('/');\r\n    }\r\n  }, [text]);\r\n\r\n  useEffect(() => {\r\n    if (!authenticated) {\r\n      history.push('/signin');\r\n    }\r\n  }, [authenticated]);\r\n\r\n  const handleChange = (event) => {\r\n    setAuth(event.target.checked);\r\n  };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleSignOut = () => {\r\n    setAnchorEl(null);\r\n    dispatch(signOut());\r\n  };\r\n\r\n  const authLinks = (\r\n    <div>\r\n\r\n      <div>\r\n        <Hidden smDown>\r\n          <Toolbar>\r\n            {authdata && (\r\n              <Grid container>\r\n                {authdata.authorized_id == 1 ? (\r\n                  <Grid container>\r\n                    <Grid>\r\n                      {' '}\r\n                      <Typography\r\n                        className={classes.title}\r\n                        component={Link}\r\n                        to='/'\r\n                      >\r\n                        ระบบจัดการเอกสารออนไลน์\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                  </Grid>\r\n                ) : (\r\n                    <Grid container>\r\n                      <Grid>\r\n                        <Typography\r\n                          style={{ marginRight: 20 }}\r\n                          className={classes.title}\r\n                          component={Link}\r\n                          to='/viewfolderadmin'\r\n                        >\r\n                          จัดการโฟลเดอร์\r\n                      </Typography>\r\n                      </Grid>\r\n                      <Grid>\r\n\r\n                        <Typography\r\n                          className={classes.title}\r\n                          component={Link}\r\n                          to='/manageuserfirst'\r\n                        >\r\n                          จัดการผู้ใช้งาน\r\n                      </Typography>\r\n                      </Grid>\r\n                      <Grid >\r\n                        <Typography\r\n                          className={classes.title}\r\n                          component={Link}\r\n                          to='/historyupload'\r\n                        >\r\n                          ประวัติการอัพโหลด\r\n                      </Typography>\r\n                      </Grid>\r\n                      <Grid >\r\n                        <Typography\r\n                          className={classes.title}\r\n                          component={Link}\r\n                          to='/historydelete'\r\n                        >\r\n                          ประวัติการลบไฟล์\r\n                      </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n              </Grid>\r\n            )}\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder='ค้นหา'\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ 'aria-label': 'search' }}\r\n                name='text'\r\n                onChange={onChange}\r\n                value={text}\r\n              />\r\n            </div>\r\n            {auth && (\r\n              <div>\r\n                <MenuNavbar signOut={handleSignOut} />\r\n              </div>\r\n            )}\r\n          </Toolbar>\r\n        </Hidden>\r\n      </div>\r\n      <div>\r\n        <Hidden mdUp>\r\n          <Toolbar>\r\n            {authdata && (\r\n              <Grid container>\r\n                {authdata.authorized_id == 1 ? (\r\n                  <Grid container>\r\n                    <Grid>\r\n                      <IconButton\r\n                        style={{ color: 'white' }}\r\n                        component={Link}\r\n                        to='/'>\r\n                        <HomeIcon />\r\n                      </IconButton>\r\n                    </Grid>\r\n                  </Grid>\r\n                ) : (\r\n                    <Grid container>\r\n                      <Grid>\r\n                        <MenuAdmin />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n              </Grid>\r\n            )}\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder='ค้นหา'\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ 'aria-label': 'search' }}\r\n                name='text'\r\n                onChange={onChange}\r\n                value={text}\r\n              />\r\n            </div>\r\n\r\n            {auth && (\r\n              <div>\r\n                <MenuNavbarRespon signOut={handleSignOut} />\r\n              </div>\r\n            )}\r\n          </Toolbar>\r\n        </Hidden>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.AppbarRoot}>\r\n      <AppBar className={classes.AppBar}>\r\n        {authenticated ? authLinks : console.log('Guest')}\r\n      </AppBar>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Circular() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress style={{ margin: 'auto', display: 'block' }} />\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  GET_FOLDERS,\r\n  GET_FOLDERS_ADMIN,\r\n  ADD_FOLDER,\r\n  SET_LOADING,\r\n  DELETE_FOLDER,\r\n  UPDATE_FOLDER,\r\n} from \"./types\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst url = \"http://192.168.5.230:8080/upload\";\r\n\r\nexport const getAllFolder = () => async (dispatch) => {\r\n  try {\r\n    await axios.get(`${url}/folderall`).then((res) => {\r\n      dispatch({\r\n        type: GET_FOLDERS_ADMIN,\r\n        payload: res.data,\r\n      });\r\n    });\r\n  } catch (err) {\r\n    console.log(\"ไม่สามารถเข้าดึงข้อมูลโฟลเดอร์ได้ !!\");\r\n  }\r\n};\r\n\r\nexport const getFolders = (user_id) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: SET_LOADING,\r\n    });\r\n    const res = await fetch(`${url}/accessfolder/user_id=${user_id}`);\r\n    const data = await res.json();\r\n    console.log(data);\r\n    dispatch({\r\n      type: GET_FOLDERS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    console.log(\"Error\");\r\n  }\r\n};\r\n\r\nexport const getAllFoldersAdmin = (user_id) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: SET_LOADING,\r\n    });\r\n    const res = await fetch(`${url}/setaccessfolder/user_id=${user_id}`);\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: GET_FOLDERS_ADMIN,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    console.log(\"Error\");\r\n  }\r\n};\r\n\r\nexport const deleteFolder = (id, snackAlert) => async (dispatch) => {\r\n  const config = {\r\n    header: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    data: {\r\n      folder_id: id,\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.delete(`${url}/folder/delete`, config);\r\n    console.log(res.data);\r\n    if (res.data.success == false) {\r\n      snackAlert(\"ไม่สามารถลบโฟลเดอร์ได้\", \"error\");\r\n    } else {\r\n      snackAlert(`ลบโฟลเดอร์สำเร็จ`, \"success\");\r\n    }\r\n    dispatch({\r\n      type: DELETE_FOLDER,\r\n    });\r\n    dispatch(getAllFolder());\r\n  } catch (err) {\r\n    console.log(\"deleteFile Error >>>\");\r\n  }\r\n};\r\nexport const createFolder = (folder_name, snackAlert, closeModal) => async (\r\n  dispatch\r\n) => {\r\n  const res = await axios.post(`${url}/folder`, { folder_name });\r\n  if (res.data.success == false) {\r\n    snackAlert(\"พบข้อผิดพลาด ชื่อโฟลเดอร์ซ้ำ\", \"error\");\r\n  } else {\r\n    snackAlert(`สร้างโฟลเดอร์ ${res.data.folder_name} สำเร็จ`, \"success\");\r\n    dispatch({\r\n      type: ADD_FOLDER,\r\n      payload: res.data,\r\n    });\r\n    closeModal();\r\n  }\r\n};\r\n\r\nexport const updateFolder = (folder, snackAlert) => async (dispatch) => {\r\n  const { folder_name, folder_id, folder_name_old } = folder;\r\n  const res = await axios.post(`${url}/folder/update`, {\r\n    folder_name,\r\n    folder_id,\r\n    folder_name_old,\r\n  });\r\n  if (res.data.success == true) {\r\n    snackAlert(`เปลี่ยนชื่อโฟลเดอร์สำเร็จ`, \"success\");\r\n  } else {\r\n    snackAlert(\"ชื่อโฟลเดอร์ซ้ำ หรือตรงกับชื่อเดิม\", \"error\");\r\n  }\r\n  dispatch({\r\n    type: UPDATE_FOLDER,\r\n  });\r\n  dispatch(getAllFolder());\r\n};\r\n// Set loading to true\r\nexport const setLoading = (dispatch) => {\r\n  dispatch({\r\n    type: SET_LOADING,\r\n  });\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    paddingTop: 80,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  modalPaper: {\r\n    width: 600,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[3],\r\n    borderRadius: 4,\r\n    outline: \"none\",\r\n    padding: theme.spacing(1, 5, 4),\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    margin: theme.spacing(3, 0, 0),\r\n    padding: theme.spacing(1, 0, 1, 0),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  background: {\r\n    marginTop: -80,\r\n    backgroundColor: \"#1976D2\",\r\n    height: '100vh',\r\n    ['@media (max-width:600px)']: { // eslint-disable-line no-useless-computed-key\r\n      height: '130vh',\r\n    },\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  modalPaper: {\r\n    width: 600,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[3],\r\n    borderRadius: 4,\r\n    outline: \"none\",\r\n    padding: theme.spacing(5, 5, 5, 5)\r\n  },\r\n  text: {\r\n    fontSize: 30,\r\n    color: '#FFFFFF',\r\n  },\r\n  textPass: {\r\n    fontSize: 25,\r\n  },\r\n  textColor: {\r\n    color: '#FFFFFF',\r\n  },\r\n  input: {\r\n    backgroundColor: 'white'\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport useStyles from \"./Styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { signIn } from \"../../actions/authActions\";\r\nimport ReactLogo from \"./logo.svg\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst SignIn = () => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const { authenticated, authdata } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const [user, setUser] = useState({\r\n    user_name: \"\",\r\n    user_password: \"\",\r\n  });\r\n  const [values, setValues] = useState({\r\n    showPassword: false,\r\n  });\r\n\r\n  const snackAlert = (msg, variant) => {\r\n    enqueueSnackbar(msg, {\r\n      variant: variant,\r\n    });\r\n  };\r\n\r\n  if (authenticated) {\r\n    if (authdata.authorized_id == 1) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    if (authdata.authorized_id == 2) {\r\n      return <Redirect to=\"/viewfolderadmin\" />;\r\n    }\r\n  }\r\n  const { user_name, user_password } = user;\r\n\r\n  const onChange = (e) => setUser({ ...user, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (user_name === \"\" || user_password === \"\") {\r\n      snackAlert(\"กรุณากรอกชื่อผู้ใช้งาน , รหัสผ่าน\", \"warning\");\r\n    } else {\r\n      dispatch(signIn(user, snackAlert));\r\n    }\r\n  };\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.background}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Typography className={classes.text}>\r\n            ระบบจัดการเอกสารออนไลน์\r\n          </Typography>\r\n          <img src={ReactLogo} alt=\"React Logo\" />\r\n          <form className={classes.form} onSubmit={onSubmit} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"user_name\"\r\n              placeholder=\"ชื่อผู้ใช้งาน\"\r\n              name=\"user_name\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={onChange}\r\n              InputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"user_password\"\r\n              placeholder=\"รหัสผ่าน\"\r\n              type={values.showPassword ? \"text\" : \"password\"}\r\n              id=\"user_password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={onChange}\r\n              InputProps={{\r\n                className: classes.input,\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              size=\"large\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              className={classes.submit}\r\n            >\r\n              เข้าสู่ระบบ\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Grid,\r\n  Breadcrumbs,\r\n  Typography,\r\n  Chip,\r\n} from '@material-ui/core/';\r\nimport { CloudDownload, CloudUpload } from '@material-ui/icons';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport Circular from '../layout/Circular';\r\nimport { getFolders } from '../../actions/folderActions';\r\nimport useStyles from '../../style/StyleFiles';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport SignIn from \"../authen/SignIn\";\r\nconst ViewFolder = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { folders, loading } = useSelector((state) => state.folder);\r\n  const { authenticated, authdata } = useSelector((state) => state.auth);\r\n  console.log(folders);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    authdata === null\r\n      ? history.push(\"/signin\")\r\n      : dispatch(getFolders(authdata.user_id));\r\n  }, []);\r\n  if (loading) {\r\n    console.log('loading >>> ' + loading);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {authenticated && (\r\n        <div>\r\n          {\r\n            authdata.authorized_id == 1 ? (\r\n              <Fragment>\r\n                <Grid container container className={classes.gridContainer}>\r\n                  <Paper className={classes.paper}>\r\n                    <Grid container>\r\n                      <Breadcrumbs\r\n                        className={classes.breadcrumbs}\r\n                        separator={<NavigateNextIcon />}\r\n                        aria-label='breadcrumb'\r\n                      >\r\n                        <Typography\r\n                          className={classes.text}\r\n                          color='textPrimary'\r\n                        >\r\n                          โฟลเดอร์ทั้งหมด\r\n                        </Typography>\r\n                      </Breadcrumbs>\r\n                    </Grid>\r\n                  </Paper>\r\n                  <Paper className={classes.paper}>\r\n                    <Hidden smDown>\r\n                      <Table className={classes.table}>\r\n                        <TableHead>\r\n                          <TableCell className={classes.tableCellName}>\r\n                            <Typography\r\n                              color='textPrimary'\r\n                              className={classes.text}\r\n                            >\r\n                              ชื่อโฟลเดอร์\r\n                            </Typography>\r\n                          </TableCell>\r\n                          <TableCell align='center'>\r\n                            <Typography\r\n                              color='textPrimary'\r\n                              className={classes.text}\r\n                            >\r\n                              วันที่แก้ไข\r\n                            </Typography>\r\n                          </TableCell>\r\n                          <TableCell align='center' colSpan={2}>\r\n                            <Typography\r\n                              color='textPrimary'\r\n                              className={classes.text}\r\n                            >\r\n                              สิทธิ์การใช้งานโฟลเดอร์\r\n                            </Typography>\r\n                          </TableCell>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                          {!loading && folders !== null\r\n                            ? folders.map((folder) => (\r\n                              <TableRow key={folder.folder_id}>\r\n                                <TableCell>\r\n                                  <Link\r\n                                    to={{\r\n                                      pathname:\r\n                                        '/ViewFiles/' + folder.folder_id,\r\n                                      state: {\r\n                                        folder_id: folder.folder_id,\r\n                                        folder_name: folder.folder_name,\r\n                                        access_upload: folder.access_upload,\r\n                                        access_download:\r\n                                          folder.access_download,\r\n                                      },\r\n                                    }}\r\n                                  >\r\n                                    <Grid\r\n                                      container\r\n                                      className={classes.iconAlign}\r\n                                    >\r\n                                      <FolderIcon\r\n                                        className={classes.iconFolderTable}\r\n                                      />\r\n                                      <Typography className={classes.text}>\r\n                                        {folder.folder_name}\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                  </Link>\r\n                                </TableCell>\r\n                                <TableCell align='center '>\r\n                                  <Typography\r\n                                    color='textPrimary'\r\n                                    className={classes.text}\r\n                                  >\r\n                                    {moment\r\n                                      .utc(folder.folder_updated)\r\n                                      .add(3, 'minutes')\r\n                                      .format('DD-MM-YYYY HH:mm')}\r\n                                  </Typography>\r\n                                </TableCell>\r\n                                <TableCell align='right'>\r\n                                  {folder.access_download ? (\r\n                                    <Chip\r\n                                      icon={<CloudDownload />}\r\n                                      label='Download'\r\n                                      color='secondary'\r\n                                      style={{\r\n                                        backgroundColor: '#4CAF50',\r\n                                        width: '110px',\r\n                                      }}\r\n                                    />\r\n                                  ) : (\r\n                                      <Chip\r\n                                        disabled={true}\r\n                                        icon={<CloudDownload />}\r\n                                        label='Download'\r\n                                        style={{\r\n                                          width: '110px',\r\n                                        }}\r\n                                      />\r\n                                    )}\r\n                                </TableCell>\r\n                                <TableCell align='left'>\r\n                                  {folder.access_upload ? (\r\n                                    <Chip\r\n                                      icon={<CloudUpload />}\r\n                                      label='Upload'\r\n                                      color='secondary'\r\n                                      style={{\r\n                                        backgroundColor: '#2196F3',\r\n                                        width: '110px',\r\n                                      }}\r\n                                    />\r\n                                  ) : (\r\n                                      <Chip\r\n                                        disabled={true}\r\n                                        icon={<CloudUpload />}\r\n                                        label='Upload'\r\n                                        style={{\r\n                                          width: '110px',\r\n                                        }}\r\n                                      />\r\n                                    )}\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            ))\r\n                            : console.log('Nodata')}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </Hidden>\r\n                    <Hidden mdUp>\r\n                      <Table>\r\n                        <TableBody>\r\n                          {!loading && folders !== null\r\n                            ? folders.map((folder) => (\r\n                              <TableRow key={folder.folder_id}>\r\n                                <TableCell>\r\n                                  <Link\r\n                                    to={{\r\n                                      pathname:\r\n                                        '/ViewFiles/' + folder.folder_id,\r\n                                      state: {\r\n                                        folder_id: folder.folder_id,\r\n                                        folder_name: folder.folder_name,\r\n                                        access_upload: folder.access_upload,\r\n                                        access_download:\r\n                                          folder.access_download,\r\n                                      },\r\n                                    }}\r\n                                  >\r\n                                    <Grid\r\n                                      container\r\n                                      className={classes.iconAlign}\r\n                                    >\r\n                                      <Grid>\r\n                                        <FolderIcon\r\n                                          className={classes.iconFolderTable}\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid>\r\n                                        <Typography\r\n                                          className={classes.nowrapText}\r\n                                        >\r\n                                          {folder.folder_name}\r\n                                        </Typography>\r\n                                        <Typography\r\n                                          className={classes.textDate}\r\n                                        >\r\n                                          {moment\r\n                                            .utc(folder.folder_updated)\r\n                                            .add(3, 'minutes')\r\n                                            .format('DD-MM-YYYY HH:mm')}\r\n                                        </Typography>\r\n                                      </Grid>\r\n                                    </Grid>\r\n                                  </Link>\r\n                                </TableCell>\r\n                                <TableCell>\r\n\r\n                                  {folder.access_download ? (\r\n                                    <CloudDownload color='secondary'\r\n                                      style={{\r\n                                        color: '#4CAF50',\r\n                                        width: '30px',\r\n                                      }} />\r\n\r\n                                  ) : (\r\n                                      <CloudDownload\r\n                                        color='disabled'\r\n                                        style={{\r\n                                          width: '30px',\r\n                                        }} />\r\n                                    )}\r\n\r\n                                  {folder.access_upload ? (\r\n                                    <CloudUpload\r\n                                      style={{\r\n                                        color: '#2196F3',\r\n                                        width: '30px',\r\n                                      }} />\r\n\r\n                                  ) : (\r\n                                      <CloudUpload\r\n                                        color=\"disabled\"\r\n                                        style={{\r\n                                          width: '30px',\r\n                                        }} />\r\n\r\n                                    )}\r\n\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            ))\r\n                            : console.log('Nodata')}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </Hidden>\r\n                    {folders === null && (\r\n                      <Table>\r\n                        <TableRow>\r\n                          <TableCell className={classes.emptyTable}>\r\n                            <Typography>\r\n                              {' ไม่พบโฟลเดอร์ที่มีสิทธิ์เข้าถึง '}\r\n                            </Typography>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </Table>\r\n                    )}\r\n                    {loading && <Circular />}\r\n                  </Paper>\r\n                </Grid>\r\n              </Fragment>\r\n            ) : (\r\n                <Redirect to={'/viewfolderadmin'} />\r\n              )\r\n            //history.push('/viewfolderamin')\r\n          }\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewFolder;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Typography,\r\n  Backdrop,\r\n  Fade,\r\n  Fab,\r\n  Tooltip,\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport useStyles from \"../../style/StyleFiles\";\r\nexport default function AddFolder(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [folder_name, setFolderName] = useState(\"\");\r\n  const handleAddFolderOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleAddFolderClose = () => {\r\n    setOpen(false);\r\n    setFolderName(\"\");\r\n  };\r\n\r\n  const handleChangeFolderName = (e) => {\r\n    let value = e.target.value.replace(/[^A-Za-z\\d]$/gi, \"\");\r\n    value = value.slice(0, 15);\r\n    setFolderName(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip\r\n        onClick={handleAddFolderOpen}\r\n        title=\"เพิ่มโฟลเดอร์\"\r\n        aria-label=\"add\"\r\n      >\r\n        <Fab color=\"primary\" className={classes.absolute}>\r\n          <AddIcon className={classes.icon} />\r\n        </Fab>\r\n      </Tooltip>\r\n      <Modal\r\n        className={classes.modal}\r\n        disableAutoFocus={true}\r\n        outline=\"none\"\r\n        open={open}\r\n        onClose={handleAddFolderClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.modalPaper}>\r\n            <div className={classes.root}>\r\n              <Typography className={classes.text} color=\"textPrimary\">\r\n                สร้างโฟลเดอร์\r\n              </Typography>\r\n              <div className={classes.modalIconAlign}>\r\n                <Grid container className={classes.iconAlign}>\r\n                  <Hidden xsDown>\r\n                    <Grid item xs>\r\n                      {\" \"}\r\n                    </Grid>\r\n                    <Grid>\r\n                      <FolderIcon className={classes.iconFolder} />\r\n                    </Grid>\r\n                    <Grid item> </Grid>\r\n                    <Grid item xs={7}>\r\n                      <TextField\r\n                        placeholder=\"ชื่อโฟลเดอร์\"\r\n                        type=\"search\"\r\n                        variant=\"outlined\"\r\n                        className={classes.textField}\r\n                        onChange={handleChangeFolderName}\r\n                        value={folder_name}\r\n                        InputProps={{\r\n                          classes: { input: classes.input },\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                      {\" \"}\r\n                    </Grid>\r\n                  </Hidden>\r\n                  <Hidden smUp>\r\n                    <Grid container className={classes.iconAlign}>\r\n                      <TextField\r\n                        placeholder=\"ชื่อโฟลเดอร์\"\r\n                        type=\"search\"\r\n                        variant=\"outlined\"\r\n                        className={classes.textField}\r\n                        onChange={handleChangeFolderName}\r\n                        value={folder_name}\r\n                        InputProps={{\r\n                          classes: { input: classes.input },\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </Hidden>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n\r\n            <div className={classes.modalBtn}>\r\n              <Button\r\n                variant=\"contained\"\r\n                className={classes.modalbtnSave}\r\n                onClick={() =>\r\n                  props.handleCreateFolder(folder_name, handleAddFolderClose)\r\n                }\r\n              >\r\n                <Typography\r\n                  className={classes.text}\r\n                  color=\"textPrimary\"\r\n                  elevation={0}\r\n                >\r\n                  ตกลง\r\n                </Typography>\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                className={classes.modalbtnCancel}\r\n                onClick={handleAddFolderClose}\r\n              >\r\n                <Typography className={classes.text} color=\"textPrimary\">\r\n                  ยกเลิก\r\n                </Typography>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport useStyles from \"../../style/StyleFiles\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport { MenuItem } from \"@material-ui/core/\";\r\n\r\nexport default function ConfirmDelete(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const folder = props.folder;\r\n  console.log(folder);\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <MenuItem\r\n        onClick={() => {\r\n          props.closeModal();\r\n          handleOpen();\r\n        }}\r\n      >\r\n        <ListItemIcon>\r\n          <RemoveIcon />\r\n        </ListItemIcon>\r\n        <Typography variant=\"inherit\" className={classes.menuItem}>\r\n          ลบ\r\n        </Typography>\r\n      </MenuItem>\r\n      <Modal\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.modalPaper}>\r\n            <div className={classes.root}>\r\n              <Typography className={classes.text}>\r\n                คุณต้องการลบโฟลเดอร์ {folder.folder_name} ?\r\n              </Typography>\r\n              <div className={classes.modalBtn}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className={classes.modalbtnDel}\r\n                  onClick={() => {\r\n                    props.delete(folder.folder_id);\r\n                    handleClose();\r\n                  }}\r\n                >\r\n                  <Typography className={classes.text}>ลบ</Typography>\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  className={classes.modalbtnCancel}\r\n                  onClick={handleClose}\r\n                >\r\n                  <Typography className={classes.text}>ยกเลิก</Typography>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport useStyles from \"../../style/StyleFiles\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport ConfirmDelete from \"../modal/ConfirmDeleteFolder\";\r\nimport {\r\n  Modal,\r\n  Typography,\r\n  Menu,\r\n  MenuItem,\r\n  IconButton,\r\n  ListItemIcon,\r\n  Backdrop,\r\n  Fade,\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Hidden,\r\n} from \"@material-ui/core/\";\r\n\r\nconst MenuFolder = (props) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [folder, setFolder] = useState({\r\n    folder_id: props.folder_id,\r\n    folder_name_old: props.folder_name_old,\r\n    folder_name: props.folder_name,\r\n  });\r\n\r\n  const handleEditFolderOpen = () => {\r\n    handleMoreVertIconClose();\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleEditFolderClose = (callback) => {\r\n    setOpen(false);\r\n    if (callback) {\r\n      setFolder({\r\n        ...folder,\r\n        folder_name_old: folder.folder_name,\r\n      });\r\n    }\r\n  };\r\n  const handleMoreVertIconClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMoreVertIconClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChangeFolderName = (e) => {\r\n    let value = e.target.value.replace(/[^A-Za-z\\d]$/gi, \"\");\r\n    value = value.slice(0, 15);\r\n    setFolder({\r\n      ...folder,\r\n      folder_name: value,\r\n    });\r\n  };\r\n\r\n  const handleRenameSave = () => {\r\n    props.edit(folder, handleEditFolderClose);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        className={classes.tableMargin}\r\n        onClick={handleMoreVertIconClick}\r\n      >\r\n        <MoreVertIcon></MoreVertIcon>\r\n      </IconButton>\r\n      <Menu\r\n        className={classes.menu}\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        onClose={handleMoreVertIconClose}\r\n      >\r\n        <ConfirmDelete\r\n          folder={folder}\r\n          delete={props.delete}\r\n          closeModal={handleMoreVertIconClose}\r\n        />\r\n        <MenuItem onClick={handleEditFolderOpen}>\r\n          <ListItemIcon>\r\n            <CreateIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <Typography variant=\"inherit\" className={classes.menuItem}>\r\n            แก้ไข\r\n          </Typography>\r\n        </MenuItem>\r\n        <Modal\r\n          className={classes.modal}\r\n          disableAutoFocus={true}\r\n          outline=\"none\"\r\n          open={open}\r\n          onClose={handleEditFolderClose}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500,\r\n          }}\r\n        >\r\n          <Fade in={open}>\r\n            <div className={classes.modalPaper}>\r\n              <div className={classes.root}>\r\n                <Typography className={classes.text} color=\"textPrimary\">\r\n                  เปลี่ยนชื่อโฟลเดอร์\r\n                </Typography>\r\n                <div className={classes.modalIconAlign}>\r\n                  <Grid container className={classes.iconAlign}>\r\n                    <Hidden xsDown>\r\n                      <Grid item xs>\r\n                        {\" \"}\r\n                      </Grid>\r\n                      <Grid item sm={1}>\r\n                        <FolderIcon className={classes.iconFolder} />\r\n                      </Grid>\r\n                      <Grid item> </Grid>\r\n                      <Grid item xs={7}>\r\n                        <TextField\r\n                          placeholder=\"ชื่อโฟลเดอร์\"\r\n                          type=\"search\"\r\n                          variant=\"outlined\"\r\n                          className={classes.textField}\r\n                          onChange={handleChangeFolderName}\r\n                          value={folder.folder_name}\r\n                          InputProps={{\r\n                            classes: { input: classes.input },\r\n                          }}\r\n                        ></TextField>\r\n                      </Grid>\r\n                      <Grid item xs>\r\n                        {\" \"}\r\n                      </Grid>\r\n                    </Hidden>\r\n                    <Hidden smUp>\r\n                      <TextField\r\n                        placeholder=\"ชื่อโฟลเดอร์\"\r\n                        type=\"search\"\r\n                        variant=\"outlined\"\r\n                        className={classes.textField}\r\n                        onChange={handleChangeFolderName}\r\n                        value={folder.folder_name}\r\n                        InputProps={{\r\n                          classes: { input: classes.input },\r\n                        }}\r\n                      ></TextField>\r\n                    </Hidden>\r\n                  </Grid>\r\n                </div>\r\n              </div>\r\n\r\n              <div className={classes.modalBtn}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className={classes.modalbtnOk}\r\n                  onClick={handleRenameSave}\r\n                >\r\n                  <Typography\r\n                    className={classes.text}\r\n                    color=\"textPrimary\"\r\n                    elevation={0}\r\n                  >\r\n                    บันทึก\r\n                  </Typography>\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  className={classes.modalbtnCancel}\r\n                  onClick={handleEditFolderClose}\r\n                >\r\n                  <Typography className={classes.text} color=\"textPrimary\">\r\n                    ยกเลิก\r\n                  </Typography>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Fade>\r\n        </Modal>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\nexport default MenuFolder;\r\n","import React, { useEffect, Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport AddFolder from \"../modal/AddFolder\";\r\nimport useStyles from \"../../style/StyleFiles\";\r\nimport MenuFolder from \"../menu/MenuFolder\";\r\nimport Circular from \"../layout/Circular\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Grid,\r\n  Breadcrumbs,\r\n  Typography,\r\n  Hidden,\r\n} from \"@material-ui/core/\";\r\nimport {\r\n  deleteFolder,\r\n  updateFolder,\r\n  getAllFolder,\r\n  createFolder,\r\n} from \"../../actions/folderActions\";\r\n\r\nconst ViewFolderAdmin = (props) => {\r\n  const classes = useStyles();\r\n  const { foldersadmin, loading } = useSelector((state) => state.folder);\r\n  const { authenticated, authdata } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllFolder());\r\n  }, []);\r\n\r\n  const snackAlert = (msg = \"Alert\", variant = \"warning\") => {\r\n    enqueueSnackbar(msg, {\r\n      variant: variant,\r\n    });\r\n  };\r\n\r\n  const refresh = () => {\r\n    dispatch(getAllFolder());\r\n    console.log(\"refresh\");\r\n  };\r\n\r\n  const handleDeleteFolder = async (folderId) => {\r\n    await dispatch(deleteFolder(folderId, snackAlert));\r\n  };\r\n\r\n  const handleCreateFolder = async (folder_name, handleAddFolderClose) => {\r\n    if (folder_name) {\r\n      await dispatch(\r\n        createFolder(folder_name, snackAlert, handleAddFolderClose)\r\n      );\r\n    } else {\r\n      snackAlert(\"กรุณาระบุชื่อโฟลเดอร์ที่ต้องการสร้าง\", \"error\");\r\n    }\r\n  };\r\n\r\n  const handleChangeFolderName = async (folder, handleAddFolderClose) => {\r\n    if (folder.folder_name) {\r\n      await dispatch(updateFolder(folder, snackAlert));\r\n      handleAddFolderClose(true);\r\n    } else {\r\n      snackAlert(\"กรุณาระบุชื่อโฟลเดอร์\", \"warning\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {authenticated && (\r\n        <div>\r\n          {authdata.authorized_id == 2 ? (\r\n            <Fragment>\r\n              <Grid container className={classes.gridContainer}>\r\n                <Paper className={classes.paper}>\r\n                  <Grid container>\r\n                    <Breadcrumbs\r\n                      className={classes.breadcrumbs}\r\n                      separator={\r\n                        <NavigateNextIcon\r\n                          className={classes.NavigateNextIcon}\r\n                        />\r\n                      }\r\n                      aria-label=\"breadcrumb\"\r\n                    >\r\n                      <Typography className={classes.text}>\r\n                        โฟลเดอร์ทั้งหมด\r\n                      </Typography>\r\n                    </Breadcrumbs>\r\n                  </Grid>\r\n                </Paper>\r\n                <Paper className={classes.paper}>\r\n                  <Hidden smDown>\r\n                    <Table className={classes.table}>\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell className={classes.tableCellName}>\r\n                            <Typography className={classes.text}>\r\n                              ชื่อโฟลเดอร์\r\n                            </Typography>\r\n                          </TableCell>\r\n                          <TableCell align=\"center\">\r\n                            <Typography className={classes.text}>\r\n                              วันที่แก้ไข\r\n                            </Typography>\r\n                          </TableCell>\r\n                          <TableCell align=\"center\">\r\n                            <Typography className={classes.text}>\r\n                              ตัวเลือก\r\n                            </Typography>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {!loading && foldersadmin != null\r\n                          ? foldersadmin.map((folder) => (\r\n                            <TableRow key={folder.folder_id}>\r\n                              <TableCell>\r\n                                <Link\r\n                                  to={{\r\n                                    pathname:\r\n                                      \"/viewfilesadmin/\" + folder.folder_id,\r\n                                    state: {\r\n                                      folder_id: folder.folder_id,\r\n                                      folder_name: folder.folder_name,\r\n                                    },\r\n                                  }}\r\n                                >\r\n                                  <Grid\r\n                                    container\r\n                                    className={classes.iconAlign}\r\n                                  >\r\n                                    <Grid>\r\n                                      <FolderIcon\r\n                                        className={classes.iconFolderTable}\r\n                                      />\r\n                                    </Grid>\r\n                                    <Grid>\r\n                                      <Typography className={classes.text}>\r\n                                        {folder.folder_name}\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Link>\r\n                              </TableCell>\r\n                              <TableCell align=\"center\">\r\n                                <Typography className={classes.text}>\r\n                                  {moment\r\n                                    .utc(folder.folder_updated)\r\n                                    .add(3, \"minutes\")\r\n                                    .format(\"DD-MM-YYYY HH:mm\")}\r\n                                </Typography>\r\n                              </TableCell>\r\n                              <TableCell align=\"center\">\r\n                                <MenuFolder\r\n                                  delete={handleDeleteFolder}\r\n                                  edit={handleChangeFolderName}\r\n                                  snackAlert={snackAlert}\r\n                                  refresh={refresh}\r\n                                  folder_name_old={folder.folder_name}\r\n                                  folder_name={folder.folder_name}\r\n                                  folder_id={folder.folder_id}\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          ))\r\n                          : console.log(\"Nodata\")}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </Hidden>\r\n                  <Hidden mdUp>\r\n                    <Table>\r\n                      <TableBody>\r\n                        {!loading && foldersadmin != null\r\n                          ? foldersadmin.map((folder) => (\r\n                            <TableRow key={folder.folder_id}>\r\n                              <TableCell>\r\n                                <Link\r\n                                  to={{\r\n                                    pathname:\r\n                                      \"/viewfilesadmin/\" + folder.folder_id,\r\n                                    state: {\r\n                                      folder_id: folder.folder_id,\r\n                                      folder_name: folder.folder_name,\r\n                                    },\r\n                                  }}\r\n                                >\r\n                                  <Grid\r\n                                    container\r\n                                    className={classes.iconAlign}\r\n                                  >\r\n                                    <Grid>\r\n                                      <FolderIcon\r\n                                        className={classes.iconFolderTable}\r\n                                      />\r\n                                    </Grid>\r\n                                    <Grid>\r\n                                      <Typography\r\n                                        className={classes.nowrapText}\r\n                                      >\r\n                                        {folder.folder_name}\r\n                                      </Typography>\r\n                                      <Typography\r\n                                        className={classes.textDate}\r\n                                      >\r\n                                        {moment\r\n                                          .utc(folder.folder_updated)\r\n                                          .add(3, \"minutes\")\r\n                                          .format(\"DD-MM-YYYY HH:mm\")}\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Link>\r\n                              </TableCell>\r\n                              <TableCell align=\"center\">\r\n                                <MenuFolder\r\n                                  delete={handleDeleteFolder}\r\n                                  edit={handleChangeFolderName}\r\n                                  snackAlert={snackAlert}\r\n                                  refresh={refresh}\r\n                                  folder_name_old={folder.folder_name}\r\n                                  folder_name={folder.folder_name}\r\n                                  folder_id={folder.folder_id}\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          ))\r\n                          : console.log(\"Nodata\")}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </Hidden>\r\n                  {foldersadmin === null ? (\r\n                    <Table>\r\n                      <TableRow>\r\n                        <TableCell className={classes.emptyTable}>\r\n                          <Typography>\r\n                            {\" ไม่พบโฟลเดอร์ที่มีสิทธิ์เข้าถึง \"}\r\n                          </Typography>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </Table>\r\n                  ) : (\r\n                      console.log(\"folder empty\")\r\n                    )}\r\n                  {loading && (\r\n                    <div className={classes.loading}>\r\n                      <Circular />\r\n                    </div>\r\n                  )}\r\n                </Paper>\r\n                <AddFolder handleCreateFolder={handleCreateFolder} />\r\n              </Grid>\r\n            </Fragment>\r\n          ) : (\r\n              <Redirect to=\"/\" />\r\n            )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ViewFolderAdmin;\r\n","import React, { useEffect, useState } from 'react';\r\nimport ViewFolder from '../files/ViewFolder';\r\nimport { useSelector } from 'react-redux';\r\nimport ViewFolderAdmin from '../files/ViewFolderAdmin';\r\n\r\nconst Home = () => {\r\n  const { authdata } = useSelector((state) => state.auth);\r\n  const [page, setPage] = useState();\r\n  useEffect(() => {\r\n    if (authdata !== null && authdata.authorized_id === 1) {\r\n      setPage(<ViewFolder />);\r\n    } else {\r\n      setPage(<ViewFolderAdmin />);\r\n    }\r\n  }, []);\r\n\r\n  return <div>{page}</div>;\r\n};\r\nexport default Home; ","import React, { useState, useEffect } from 'react'\r\nimport Document from \"./document.svg\";\r\nimport JPG from './jpg.svg';\r\nimport Option from './options.svg';\r\nimport PDF from './pdf.svg'\r\nimport PNG from './png.svg';\r\nimport PowerPoint from './powerpoint.svg';\r\nimport TXT from './txt.svg';\r\nimport ZIP from './zip.svg';\r\nimport xlxs from './xls.svg'\r\nimport useStyles from \"../../style/StyleFiles\";\r\n\r\nconst Filetypes = (props) => {\r\n    const classes = useStyles();\r\n    const { filename } = props.typefile\r\n\r\n    const [type, setType] = useState('')\r\n\r\n    // const keepFiles = () => {\r\n    //     let file = [] \r\n    //     file = file.concat(filetype, typefile)\r\n    //     setFiletype(file)\r\n    // }\r\n    useEffect(() => {\r\n        if (props.typefile.indexOf('.')) {\r\n            //console.log(props.typefile.length)\r\n            const type = props.typefile.split(\".\").pop()\r\n            setType(type)\r\n        }\r\n    })\r\n    return (\r\n        <div>\r\n            <div className={\r\n                props.checktype != null\r\n                    ? classes.filetypeUpload\r\n                    : classes.filetype\r\n            }>\r\n                {type == \"docx\" &&\r\n                    <img src={Document} />\r\n                }\r\n                {type == \"xlsx\" &&\r\n                    <img src={xlxs} />\r\n                }\r\n                {type == \"pptx\" &&\r\n                    <img src={PowerPoint} />\r\n                }\r\n                {type == \"pdf\" &&\r\n                    <img src={PDF} />\r\n                }\r\n                {type == \"png\" &&\r\n                    <img src={PNG} />\r\n                    //<img src={props.src} />\r\n                }\r\n                {type == \"jpg\" &&\r\n                    <img src={JPG} />\r\n                    //<img src={props.src} />\r\n                }\r\n                {type == \"txt\" &&\r\n                    <img src={TXT} />\r\n                }\r\n                {type == \"zip\" &&\r\n                    <img src={ZIP} />\r\n                }\r\n                {type != \"docx\" && type != \"xlsx\" && type != \"pptx\" && type != \"pdf\" && type != \"png\" && type != \"jpg\" && type != \"txt\" && type != \"zip\" &&\r\n                    <img src={Option} />\r\n                }\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filetypes;","import React, { useState } from \"react\";\r\nimport \"../../style/upload_style.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport useStyles from \"../../style/StyleFiles\";\r\nimport axios from \"axios\";\r\nimport { Grid, Card } from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { ADD_FILE } from \"../../actions/types\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport FileType from \"../filetype/Filetypes\";\r\n\r\nconst Dropzone = (props) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const classes = useStyles();\r\n  const { folderId } = props;\r\n  const dispatch = useDispatch();\r\n  const user_id = localStorage.getItem(\"user_id\");\r\n\r\n  const [post, setPost] = useState({\r\n    photos: [],\r\n  });\r\n  const [filesUpload, setFilesUpload] = useState([]);\r\n  const [highlight, setHighlight] = useState(false);\r\n  const { photos } = post;\r\n  const snackAlert = (msg, variant) => {\r\n    enqueueSnackbar(msg, {\r\n      variant: variant,\r\n    });\r\n  };\r\n  const handleFileChange = (e) => {\r\n    let files = e.target.files;\r\n    handleFiles(files);\r\n  };\r\n\r\n  const handleFiles = (files) => {\r\n    let photosArr = [];\r\n    let filesUploadArr = [];\r\n    for (let file of files) {\r\n      let reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.addEventListener(\"load\", () => {\r\n        let fileobj = {\r\n          name: file.name,\r\n          type: file.type,\r\n          size: file.size,\r\n          src: reader.result,\r\n        };\r\n        photosArr.push(fileobj);\r\n        filesUploadArr.push(file);\r\n        setPost({\r\n          photos: [...photos, ...photosArr],\r\n        });\r\n        setFilesUpload([...filesUpload, ...filesUploadArr]);\r\n      });\r\n    }\r\n  };\r\n  const handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    let formData = new FormData();\r\n    let res;\r\n    formData.append(\"my_file\", filesUpload[0]);\r\n    formData.append(\"user_id\", user_id);\r\n    console.log(\"Before Append\" + folderId);\r\n    formData.append(\"folder_id\", parseInt(folderId));\r\n    if (filesUpload.length > 0) {\r\n      for (let i = 0; i < filesUpload.length; i++) {\r\n        formData.set(\"my_file\", filesUpload[i]);\r\n        try {\r\n          res = await axios.post(\r\n            \"http://192.168.5.230:8080/upload/file\",\r\n            formData,\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          );\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n        if (res.data.success === true) {\r\n          dispatch({\r\n            type: ADD_FILE,\r\n            payload: res.data.file_data,\r\n          });\r\n        }\r\n      }\r\n      res.data.success === true\r\n        ? UploadSucces()\r\n        : snackAlert(\"พบข้อผิดพลาด กรุณาลองใหม่...\", \"error\");\r\n    } else {\r\n      snackAlert(\"กรุณาเลือกไฟล์เพื่ออัพโหลด\", \"warning\");\r\n    }\r\n  };\r\n  const UploadSucces = () => {\r\n    snackAlert(\"อัพโหลดสำเร็จ\", \"success\");\r\n    //props.refresh();\r\n    props.handleClose();\r\n  };\r\n  const handleDelete = (e) => {\r\n    let target = e.target.parentElement;\r\n    let targetIndex = target.dataset.imgindex * 1;\r\n    setPost({\r\n      photos: [\r\n        ...photos.slice(0, targetIndex),\r\n        ...photos.slice(targetIndex + 1),\r\n      ],\r\n    });\r\n    setFilesUpload([\r\n      ...filesUpload.slice(0, targetIndex),\r\n      ...filesUpload.slice(targetIndex + 1),\r\n    ]);\r\n  };\r\n  const handleHighlight = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(true);\r\n  };\r\n  const handleUnHighlight = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setHighlight(false);\r\n  };\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    let dt = e.dataTransfer;\r\n    let files = dt.files;\r\n    handleFiles(files);\r\n    setHighlight(false);\r\n  };\r\n  return (\r\n    <form className=\"\" encType=\"multipart/form-data\">\r\n      <div className={classes.upload}>\r\n        <div\r\n          className={\r\n            highlight\r\n              ? \"custom-file-drop-area highlight\"\r\n              : \"custom-file-drop-area\"\r\n          }\r\n          onDragEnter={handleHighlight}\r\n          onDragOver={handleHighlight}\r\n          onDragLeave={handleUnHighlight}\r\n          onDrop={handleDrop}\r\n        >\r\n          <input\r\n            type=\"file\"\r\n            name=\"photos\"\r\n            placeholder=\"Enter photos\"\r\n            multiple\r\n            id=\"filephotos\"\r\n            onChange={handleFileChange}\r\n          />\r\n          <label htmlFor=\"filephotos\">{\"ลากหรือคลิกเพื่ออัพโหลดไฟล์\"}</label>\r\n        </div>\r\n        {photos.length != 0 ? (\r\n          <div className={classes.uploadPreview}>\r\n            <List>\r\n              {photos.length > 0 &&\r\n                photos.map((item, index) => (\r\n                  <div key={index} className={classes.uploadPreviewList}>\r\n                    <Card className={classes.uploadPreviewCard}>\r\n                      <ListItem data-imgindex={index}>\r\n                        <FileType\r\n                          typefile={item.name}\r\n                          checktype={item.size}\r\n                          style={{ width: \"50px\", height: \"50px\" }}\r\n                        />\r\n                        <div className={classes.uploadPreviewBox}>\r\n                          <Box\r\n                            className={classes.uploadPreviewListName}\r\n                            // my={2}\r\n                            textOverflow=\"ellipsis\"\r\n                            overflow=\"hidden\"\r\n                          >\r\n                            {item.name}\r\n                          </Box>\r\n                        </div>\r\n                        <Icon\r\n                          aria-label=\"delete\"\r\n                          title=\"Delete\"\r\n                          onClick={handleDelete}\r\n                          className={classes.uploadPreviewListIcon}\r\n                        >\r\n                          delete\r\n                        </Icon>\r\n                      </ListItem>\r\n                    </Card>\r\n                  </div>\r\n                ))}\r\n            </List>\r\n          </div>\r\n        ) : (\r\n            <div className={classes.uploadPreviewDisable}></div>\r\n          )}\r\n      </div>\r\n\r\n      <div className={classes.modalBtnUpload}>\r\n        <Button\r\n          variant=\"contained\"\r\n          className={classes.modalbtnCancel}\r\n          onClick={(e) => handleUpload(e)}\r\n        >\r\n          <Typography\r\n            className={classes.text}\r\n            color=\"textPrimary\"\r\n            elevation={0}\r\n          >\r\n            อัพโหลด\r\n          </Typography>\r\n        </Button>\r\n        <Button\r\n          color=\"primary\"\r\n          className={classes.modalbtnCancel}\r\n          onClick={() => props.handleClose()}\r\n        >\r\n          <Typography className={classes.text} color=\"textPrimary\">\r\n            ยกเลิก\r\n          </Typography>\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Dropzone;\r\n","import React, { Component } from \"react\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport \"../../style/style.css\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport styles from \"../../style/StyleFilesClass\";\r\nimport Dropzone from \"./Dropzone\";\r\nimport { Typography } from \"@material-ui/core\";\r\nclass UploadBtn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n    };\r\n    this.handleOpen = this.handleOpen.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n  }\r\n  handleOpen = () => {\r\n    this.setState({\r\n      open: true,\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Fab\r\n          onClick={this.handleOpen}\r\n          className={classes.absolute}\r\n          color=\"primary\"\r\n        >\r\n          <AddIcon className={classes.icon} />\r\n        </Fab>\r\n        <Modal\r\n          aria-labelledby=\"transition-modal-title\"\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.modal}\r\n          open={this.state.open}\r\n\r\n        >\r\n          <div className={classes.modalPaper}>\r\n            <div className={classes.root}>\r\n              <Typography className={classes.text} color=\"textPrimary\">\r\n                ไฟล์ที่อัพโหลด\r\n              </Typography>\r\n              <div className={classes.modalIconAlign}>\r\n                <Dropzone\r\n                  refresh={this.props.refresh}\r\n                  handleClose={this.handleClose}\r\n                  folderId={this.props.folderId}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(UploadBtn);\r\n","export default (theme) => ({\r\n  root: {\r\n    margin: theme.spacing(4, 0, 1, 0),\r\n  },\r\n  absolute: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing(8),\r\n    right: theme.spacing(8),\r\n    height: 100,\r\n    width: 100,\r\n    backgroundColor: \"#1976D2\",\r\n    ['@media (max-width:600px)']: {\r\n      bottom: theme.spacing(4),\r\n      right: theme.spacing(4),\r\n      height: 80,\r\n      width: 80,\r\n    },\r\n  },\r\n  icon: {\r\n    fontSize: 50,\r\n    ['@media (max-width:600px)']: {\r\n      fontSize: 40,\r\n    },\r\n  },\r\n  text: {\r\n    fontSize: 20,\r\n    color: \"#000000\",\r\n  },\r\n  modal: {\r\n    overflowY: \"scroll\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  modalIconAlign: {\r\n    direction: \"row\",\r\n    alignItems: \"center\",\r\n    margin: theme.spacing(5, 5, 5, 5),\r\n    ['@media (max-width:600px)']: { // eslint-disable-line no-useless-computed-key\r\n      margin: theme.spacing(5, 0, 5, 0),\r\n    }\r\n  },\r\n  modalPaper: {\r\n    width: 600,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[3],\r\n    borderRadius: 4,\r\n    outline: \"none\",\r\n    padding: theme.spacing(1, 5, 4),\r\n    ['@media (max-width:730px)']: { // eslint-disable-line no-useless-computed-key\r\n      width: 400\r\n    },\r\n    ['@media (max-width:600px)']: { // eslint-disable-line no-useless-computed-key\r\n      width: 260,\r\n    },\r\n    ['@media (max-width:400px)']: { // eslint-disable-line no-useless-computed-key\r\n      width: 240\r\n    },\r\n    ['@media (max-width:350px)']: { // eslint-disable-line no-useless-computed-key\r\n      width: 230\r\n    },\r\n  },\r\n\r\n});\r\n","import {\r\n  GET_FILES,\r\n  ADD_FILE,\r\n  DELETE_FILE,\r\n  SET_LOADING,\r\n  DOWNLOAD_FILE,\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\nconst url = \"http://192.168.5.230:8080\";\r\nexport const download = (fileId, filename) => async (dispatch) => {\r\n  axios({\r\n    url: `${url}/download/file_id=` + fileId,\r\n    method: \"GET\",\r\n    responseType: \"blob\", // important\r\n  }).then((res) => {\r\n    console.log(res.data);\r\n    const URL = window.URL.createObjectURL(new Blob([res.data]));\r\n    const link = document.createElement(\"a\");\r\n    link.href = URL;\r\n    link.setAttribute(\"download\", filename); //or any other extension\r\n\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    dispatch({ payload: res.data, type: \"DOWNLOAD_FILE\" });\r\n  });\r\n};\r\nexport const getFiles = (folder_id) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: SET_LOADING,\r\n    });\r\n    const res = await fetch(\r\n      `http://192.168.5.230:8080/upload/accessfile/folder_id=${folder_id}`\r\n    );\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: GET_FILES,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const deleteFile = (fileId, userID, snackAlert) => async (dispatch) => {\r\n  const config = {\r\n    header: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    data: {\r\n      file_id: fileId,\r\n      user_id: userID,\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.delete(`${url}/upload/file/deletekeepfile`, config);\r\n    if (res.data.success) {\r\n      dispatch({\r\n        type: DELETE_FILE,\r\n        payload: res.data,\r\n      });\r\n      snackAlert(\"ลบเอกสารสำเร็จ\", \"success\");\r\n    } else {\r\n      snackAlert(\"พบข้อผิดพลาดไม่สามารถลบไฟล์ได้\");\r\n    }\r\n\r\n    console.log(res.data);\r\n  } catch (err) {\r\n    snackAlert(\"พบข้อผิดพลาดไม่สามารถลบไฟล์ได้ \" + err);\r\n  }\r\n};\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport {\r\n  Button,\r\n  Typography,\r\n  IconButton,\r\n  Fade,\r\n  Backdrop,\r\n  Modal,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../../style/StyleFiles\";\r\nimport { download } from \"../../actions/fileActions\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n\r\nexport default function ConfirmDownload(props) {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const filename = props.filename;\r\n  const fileId = props.fileid;\r\n\r\n  const handleDownload = () => {\r\n    dispatch(download(fileId, filename));\r\n    handleClose();\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Hidden xsDown>\r\n        <IconButton className={classes.tableMargin} onClick={handleOpen}>\r\n          <GetAppIcon />\r\n        </IconButton>\r\n      </Hidden>\r\n      <Hidden smUp>\r\n        <IconButton className={classes.iconButton} onClick={handleOpen}>\r\n          <GetAppIcon />\r\n        </IconButton>\r\n      </Hidden>\r\n\r\n      <Modal\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.modalPaper}>\r\n            <div className={classes.root}>\r\n              <h1>{props.count}</h1>\r\n              <Typography className={classes.text}>\r\n                คุณต้องการดาวน์โหลด {props.filename} ?\r\n              </Typography>\r\n              <div className={classes.modalBtn}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className={classes.modalbtnDownload}\r\n                  onClick={handleDownload}\r\n                >\r\n                  <Typography className={classes.text}>ดาวน์โหลด</Typography>\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  className={classes.modalbtnCancel}\r\n                  onClick={handleClose}\r\n                >\r\n                  <Typography className={classes.text}>ยกเลิก</Typography>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, Fragment, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Grid,\r\n  Breadcrumbs,\r\n  Typography,\r\n} from \"@material-ui/core/\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport UploadBtn from \"../modal/UploadBtn\";\r\nimport { getFiles } from \"../../actions/fileActions\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport ConfirmDownload from \"../modal/ConfirmDowload\";\r\nimport useStyles from \"../../style/StyleFiles\";\r\nimport Circular from \"../layout/Circular\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport FileType from \"../filetype/Filetypes\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n\r\nconst ViewFiles = (props) => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const { files, loading } = useSelector((state) => state.file);\r\n  const dispatch = useDispatch();\r\n  const [folderID, setFolderID] = useState();\r\n  const [folderName, setFolderName] = useState();\r\n  const [accessupload, setAccessUpload] = useState({});\r\n  const [accessdownload, setAccessDowload] = useState({});\r\n  useEffect(() => {\r\n    if (props.location.state) {\r\n      const {\r\n        folder_id,\r\n        folder_name,\r\n        access_upload,\r\n        access_download,\r\n      } = props.location.state;\r\n      setAccessUpload(access_upload);\r\n      setAccessDowload(access_download);\r\n      setFolderID(folder_id);\r\n      setFolderName(folder_name);\r\n      dispatch(getFiles(folder_id));\r\n    } else if (!props.location.state) {\r\n      history.push(\"/\");\r\n    }\r\n  }, []);\r\n  const updateList = () => {\r\n    dispatch(getFiles(folderID));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid container className={classes.gridContainer}>\r\n        <Paper className={classes.paper}>\r\n          <Grid container>\r\n            <Breadcrumbs\r\n              className={classes.breadcrumbs}\r\n              separator={\r\n                <NavigateNextIcon className={classes.NavigateNextIcon} />\r\n              }\r\n              aria-label=\"breadcrumb\"\r\n            >\r\n              <Link to={{ pathname: \"/\" }}>\r\n                <Typography className={classes.opacity}>\r\n                  โฟลเดอร์ทั้งหมด\r\n                </Typography>\r\n              </Link>\r\n              <Typography className={classes.text}>{folderName}</Typography>\r\n            </Breadcrumbs>\r\n          </Grid>\r\n        </Paper>\r\n\r\n        <Paper className={classes.paper}>\r\n          <Hidden smDown>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className={classes.tableCellName}>\r\n                    <Typography color=\"textPrimary\" className={classes.text}>\r\n                      ชื่อไฟล์\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Typography color=\"textPrimary\" className={classes.text}>\r\n                      วันที่อัพโหลด\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Typography color=\"textPrimary\" className={classes.text}>\r\n                      ดาวน์โหลด\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading && files !== null\r\n                  ? files.map((file) => (\r\n                    <TableRow key={file.file_id} hover>\r\n                      <TableCell>\r\n                        <Grid container className={classes.iconAlign}>\r\n                          <FileType\r\n                            typefile={file.file_name}\r\n                            src={file.src}\r\n                          />\r\n                          <div className={classes.nowrap}>\r\n                            <Box\r\n                              className={classes.nowrapText}\r\n                              textOverflow=\"ellipsis\"\r\n                              overflow=\"hidden\"\r\n                            >\r\n                              {file.file_name}\r\n                            </Box>\r\n                          </div>\r\n                        </Grid>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <Typography className={classes.text}>\r\n                          {moment\r\n                            .utc(file.file_created)\r\n                            .add(3, \"minutes\")\r\n                            .format(\"DD-MM-YYYY HH:mm\")}\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        {accessdownload ? (\r\n                          <ConfirmDownload\r\n                            filename={file.file_name}\r\n                            fileid={file.file_id}\r\n                          />\r\n                        ) : (\r\n                            <GetAppIcon color=\"disabled\" />\r\n                          )}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n                  : null}\r\n              </TableBody>\r\n            </Table>\r\n          </Hidden>\r\n          <Hidden mdUp>\r\n            <Table>\r\n              <TableBody>\r\n                {!loading && files !== null\r\n                  ? files.map((file) => (\r\n                    <TableRow key={file.file_id} hover>\r\n                      <TableCell>\r\n                        <Grid container className={classes.iconAlign}>\r\n                          <Grid>\r\n                            <FileType\r\n                              typefile={file.file_name}\r\n                              src={file.src}\r\n                            />\r\n                          </Grid>\r\n                          <Grid>\r\n                            <div className={classes.nowrap}>\r\n                              <Box\r\n                                className={classes.nowrapText}\r\n                                textOverflow=\"ellipsis\"\r\n                                overflow=\"hidden\"\r\n                              >\r\n                                {file.file_name}\r\n                              </Box>\r\n                            </div>\r\n                            <Typography className={classes.textDate}>\r\n                              {moment\r\n                                .utc(file.file_created)\r\n                                .add(3, \"minutes\")\r\n                                .format(\"DD-MM-YYYY HH:mm\")}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {accessdownload ? (\r\n                          <ConfirmDownload\r\n                            filename={file.file_name}\r\n                            fileid={file.file_id}\r\n                          />\r\n                        ) : (\r\n                            <GetAppIcon color=\"disabled\" />\r\n                          )}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n                  : null}\r\n              </TableBody>\r\n            </Table>\r\n          </Hidden>\r\n          {files === null ? (\r\n            <Table>\r\n              <TableRow>\r\n                <TableCell className={classes.emptyTable}>\r\n                  <Typography>{\" โฟลเดอร์นี้ว่างเปล่า \"}</Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            </Table>\r\n          ) : null}\r\n          {loading && (\r\n            <div className={classes.loading}>\r\n              <Circular />\r\n            </div>\r\n          )}\r\n        </Paper>\r\n      </Grid>\r\n      {accessupload && <UploadBtn refresh={updateList} folderId={folderID} />}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ViewFiles;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Typography,\r\n  Backdrop,\r\n  Fade,\r\n  Fab,\r\n  Tooltip,\r\n  Button,\r\n  Container,\r\n  TextField,\r\n  Grid,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport useStyles from \"../../style/StyleFiles\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addRegistor } from \"../../actions/authActions\";\r\n\r\nexport default function Registor(props) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const snackAlert = (msg, variant) => {\r\n    enqueueSnackbar(msg, {\r\n      variant: variant,\r\n    });\r\n  };\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [value1, setValue1] = useState(true);\r\n  const [value2, setValue2] = useState(false);\r\n  const [values, setValues] = useState({\r\n    showPassword: false,\r\n  });\r\n\r\n  const [user, setUser] = useState({\r\n    user_name: \"\",\r\n    user_password: \"\",\r\n    user_firstname: \"\",\r\n    user_lastname: \"\",\r\n    authorized_id: 1,\r\n  });\r\n  const [errorCheck, setErrorCheck] = useState({});\r\n  const [error, setError] = useState({});\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    let users = {\r\n      user_name: \"\",\r\n      user_password: \"\",\r\n      user_firstname: \"\",\r\n      user_lastname: \"\",\r\n      authorized_id: 1,\r\n    };\r\n    setUser({ ...user, ...users });\r\n    setError({});\r\n    setErrorCheck({});\r\n    setValue1(true);\r\n    setValue2(false);\r\n    setValues({ ...values, showPassword: false });\r\n  };\r\n  const onChange = (e) => {\r\n    if (e.target.name == \"user_firstname\" || e.target.name == \"user_lastname\") {\r\n      let value = e.target.value.replace(/[^A-Za-zก-๙\\d]/gi, \"\");\r\n      setUser({ ...user, [e.target.name]: value });\r\n    }\r\n    if (e.target.name == \"user_name\" || e.target.name == \"user_password\") {\r\n      let value = e.target.value.replace(/[^A-Za-z\\d]/gi, \"\");\r\n      setUser({ ...user, [e.target.name]: value });\r\n    }\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const onChangeRadio = (e) => {\r\n    if (e.target.value == \"1\") {\r\n      setValue1(true);\r\n      setValue2(false);\r\n      setUser({ ...user, authorized_id: parseInt(e.target.value) });\r\n    }\r\n    if (e.target.value == \"2\") {\r\n      setValue1(false);\r\n      setValue2(true);\r\n      setUser({ ...user, authorized_id: parseInt(e.target.value) });\r\n    }\r\n  };\r\n\r\n  const validation = (e) => {\r\n    let formIsValid = true;\r\n    let errors = {\r\n      error_firstname: \"\",\r\n      error_lastname: \"\",\r\n      error_username: \"\",\r\n      error_password: \"\",\r\n    };\r\n    let errorChecks = {\r\n      errorChecks_firstname: false,\r\n      errorChecks_lastname: false,\r\n      errorChecks_username: false,\r\n      errorChecks_password: false,\r\n    };\r\n    if (user.user_firstname.length == 0) {\r\n      formIsValid = false;\r\n      errorChecks.errorChecks_firstname = true;\r\n      errors.error_firstname = \"กรุณากรอกชื่อ\";\r\n    }\r\n    if (user.user_lastname.length == 0) {\r\n      formIsValid = false;\r\n      errorChecks.errorChecks_lastname = true;\r\n      errors.error_lastname = \"กรุณากรอกนามสกุล\";\r\n    }\r\n    if (user.user_name.length <= 7) {\r\n      formIsValid = false;\r\n      errorChecks.errorChecks_username = true;\r\n      errors.error_username = \"ชื่อผู้ใช้งานต้องมากกว่า 8 ตัว\";\r\n    }\r\n    if (user.user_name.length == 0) {\r\n      formIsValid = false;\r\n      errorChecks.errorChecks_username = true;\r\n      errors.error_username = \"กรุณากรอกชื่อผู้ใช้งาน\";\r\n    }\r\n    if (user.user_password.length <= 7) {\r\n      formIsValid = false;\r\n      errorChecks.errorChecks_password = true;\r\n      errors.error_password = \"รหัสผ่านต้องมากกว่า 8 ตัว\";\r\n    }\r\n    if (user.user_password.length == 0) {\r\n      formIsValid = false;\r\n      errorChecks.errorChecks_password = true;\r\n      errors.error_password = \"กรุณากรอกรหัสผ่าน\";\r\n    }\r\n\r\n    setErrorCheck({ ...errorCheck, ...errorChecks });\r\n    setError({ ...error, ...errors });\r\n    return formIsValid;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const err = validation();\r\n    console.log(user);\r\n    if (err) {\r\n      dispatch(addRegistor(user, snackAlert, props.updateUser, handleClose));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip onClick={handleOpen} title=\"เพิ่มผู้ใช้งาน\" aria-label=\"add\">\r\n        <Fab color=\"primary\" className={classes.absolute}>\r\n          <AddIcon className={classes.icon} />\r\n        </Fab>\r\n      </Tooltip>\r\n\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.modalPaper}>\r\n            <div className={classes.root}>\r\n              <Typography className={classes.text}>\r\n                สร้างผู้ใช้งานระบบ\r\n              </Typography>\r\n              <Container maxWidth=\"xl\">\r\n                <form className={classes.formStyle}>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        autoComplete=\"fname\"\r\n                        name=\"user_firstname\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"ชื่อ\"\r\n                        fullWidth\r\n                        id=\"user_firtname\"\r\n                        onChange={onChange}\r\n                        value={user.user_firstname}\r\n                        error={errorCheck.errorChecks_firstname}\r\n                        className={classes.textField}\r\n                        InputProps={{\r\n                          className: classes.input,\r\n                        }}\r\n                      />\r\n                      <Typography className={classes.errorTextRegistor}>\r\n                        {error.error_firstname}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        id=\"user_lastname\"\r\n                        placeholder=\"นามสกุล\"\r\n                        name=\"user_lastname\"\r\n                        autoComplete=\"lname\"\r\n                        onChange={onChange}\r\n                        value={user.user_lastname}\r\n                        error={errorCheck.errorChecks_lastname}\r\n                        className={classes.textField}\r\n                        InputProps={{\r\n                          className: classes.input,\r\n                        }}\r\n                      />\r\n                      <Typography className={classes.errorTextRegistor}>\r\n                        {error.error_lastname}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={2} style={{ marginTop: 10 }}>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        autoComplete=\"fname\"\r\n                        name=\"user_name\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"ชื่อผู้ใช้งาน\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"user_name\"\r\n                        onChange={onChange}\r\n                        value={user.user_name}\r\n                        error={errorCheck.errorChecks_username}\r\n                        className={classes.textField}\r\n                        InputProps={{\r\n                          className: classes.input,\r\n                        }}\r\n                      />\r\n                      <Typography className={classes.errorTextRegistor}>\r\n                        {error.error_username}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={2} style={{ marginTop: 10 }}>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        autoComplete=\"fname\"\r\n                        name=\"user_password\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"รหัสผ่าน\"\r\n                        type={values.showPassword ? \"text\" : \"password\"}\r\n                        fullWidth\r\n                        id=\"user_password\"\r\n                        onChange={onChange}\r\n                        value={user.user_password}\r\n                        error={errorCheck.errorChecks_password}\r\n                        className={classes.textField}\r\n                        InputProps={{\r\n                          className: classes.input,\r\n                          endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                              <IconButton\r\n                                aria-label=\"toggle password visibility\"\r\n                                onClick={handleClickShowPassword}\r\n                                onMouseDown={handleMouseDownPassword}\r\n                              >\r\n                                {values.showPassword ? (\r\n                                  <Visibility />\r\n                                ) : (\r\n                                    <VisibilityOff />\r\n                                  )}\r\n                              </IconButton>\r\n                            </InputAdornment>\r\n                          ),\r\n                        }}\r\n                      />\r\n                      <Typography className={classes.errorTextRegistor}>\r\n                        {error.error_password}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </form>\r\n              </Container>\r\n              <Typography className={classes.text} style={{ marginTop: 20 }}>\r\n                สิทธิ์ผู้ใช้งาน\r\n              </Typography>\r\n              <RadioGroup\r\n                value={user.authorized_id}\r\n                name=\"authorized_id\"\r\n                id=\"authorized_id\"\r\n                style={{ marginLeft: 30, marginTop: 10 }}\r\n                onChange={onChangeRadio}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"1\"\r\n                  checked={value1}\r\n                  control={<Radio />}\r\n                  label=\"ผู้ใช้งานระบบ\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"2\"\r\n                  checked={value2}\r\n                  control={<Radio />}\r\n                  label=\"ผู้ดูแลระบบ\"\r\n                />\r\n              </RadioGroup>\r\n\r\n              <div className={classes.modalBtn} style={{ marginTop: 15 }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className={classes.modalbtnSave}\r\n                  onClick={handleSubmit}\r\n                >\r\n                  <Typography\r\n                    className={classes.text}\r\n                    color=\"textPrimary\"\r\n                    elevation={0}\r\n                  >\r\n                    สร้าง\r\n                  </Typography>\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  className={classes.modalbtnCancel}\r\n                  onClick={handleClose}\r\n                >\r\n                  <Typography className={classes.text} color=\"textPrimary\">\r\n                    ยกเลิก\r\n                  </Typography>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Fragment, useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Typography,\r\n  Backdrop,\r\n  Fade,\r\n  Fab,\r\n  Tooltip,\r\n  Button,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport useStyles from \"../../style/StyleFiles\";\r\n\r\nconst ConfirmDeleteFiles = (props) => {\r\n  const { listDelFiles } = props;\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const listDel = listDelFiles;\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip\r\n        onClick={() => {\r\n          handleOpen();\r\n        }}\r\n        title=\"ลบ\"\r\n        aria-label=\"add\"\r\n      >\r\n        <Fab color=\"primary\" className={classes.absolute}>\r\n          <DeleteIcon className={classes.icon} />\r\n        </Fab>\r\n      </Tooltip>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.modalPaper}>\r\n            <div className={classes.root}>\r\n              <Typography className={classes.text}>เอกสารที่เลือก</Typography>\r\n              <div className={classes.modalIconAlign}>\r\n                {listDel &&\r\n                  listDel.map((listDelFile, index) => {\r\n                    return (\r\n                      <Grid container className={classes.iconAlign} key={index}>\r\n                        <Grid item xs></Grid>\r\n                        <Grid item xs={10} className={classes.iconCheck}>\r\n                          <Typography className={classes.text}>\r\n                            {listDelFile.file_name}\r\n                          </Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n            <div className={classes.modalBtn}>\r\n              <Button\r\n                variant=\"contained\"\r\n                className={classes.modalbtnDel}\r\n                onClick={() => {\r\n                  props.handleDelete(listDel);\r\n                  handleClose();\r\n                }}\r\n              >\r\n                <Typography className={classes.text}>ลบ</Typography>\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                className={classes.modalbtnCancel}\r\n                onClick={handleClose}\r\n              >\r\n                <Typography className={classes.text}>ยกเลิก</Typography>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default ConfirmDeleteFiles;\r\n","import React from \"react\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { Button, Typography, MenuItem } from \"@material-ui/core\";\r\nimport useStyles from \"../../style/StyleFiles\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\n\r\nexport default function ConfirmDeleteFile(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const file = props.file;\r\n  console.log(file);\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <MenuItem\r\n        onClick={() => {\r\n          props.closeMenu();\r\n          handleOpen();\r\n        }}\r\n      >\r\n        <ListItemIcon>\r\n          <RemoveIcon />\r\n        </ListItemIcon>\r\n        <Typography variant=\"inherit\" className={classes.menuItem}>\r\n          ลบ\r\n        </Typography>\r\n      </MenuItem>\r\n      <Modal\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.modalPaper}>\r\n            <div className={classes.root}>\r\n              <Typography className={classes.text}>\r\n                คุณต้องการลบ {file.file_name} ?\r\n              </Typography>\r\n              <div className={classes.modalBtn}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className={classes.modalbtnDel}\r\n                  onClick={async () => {\r\n                    await props.handleDelete([file]);\r\n                    handleClose();\r\n                  }}\r\n                >\r\n                  <Typography className={classes.text}>ลบ</Typography>\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  className={classes.modalbtnCancel}\r\n                  onClick={handleClose}\r\n                >\r\n                  <Typography className={classes.text}>ยกเลิก</Typography>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport {\r\n  Button,\r\n  Typography,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  Fade,\r\n  Backdrop,\r\n  Modal,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../../style/StyleFiles\";\r\nimport { download } from \"../../actions/fileActions\";\r\n\r\nexport default function ConfirmDownloadAdmin(props) {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const file = props.file;\r\n\r\n  const handleDownload = () => {\r\n    dispatch(download(file.file_id, file.file_name));\r\n    handleClose();\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    props.closeMenu();\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <MenuItem onClick={handleOpen}>\r\n        <ListItemIcon>\r\n          <GetAppIcon />\r\n        </ListItemIcon>\r\n        <Typography variant=\"inherit\" className={classes.menuItem}>\r\n          ดาวน์โหลด\r\n        </Typography>\r\n      </MenuItem>\r\n      <Modal\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.modalPaper}>\r\n            <div className={classes.root}>\r\n              <Typography className={classes.text}>\r\n                คุณต้องการดาวน์โหลด {file.file_name} ?\r\n              </Typography>\r\n              <div className={classes.modalBtn}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className={classes.modalbtnDownload}\r\n                  onClick={handleDownload}\r\n                >\r\n                  <Typography className={classes.text}>ดาวน์โหลด</Typography>\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  className={classes.modalbtnCancel}\r\n                  onClick={handleClose}\r\n                >\r\n                  <Typography className={classes.text}>ยกเลิก</Typography>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport {\r\n  Typography,\r\n  Menu,\r\n  MenuItem,\r\n  IconButton,\r\n  ListItemIcon,\r\n} from '@material-ui/core/';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport useStyles from '../../style/StyleFiles';\r\nimport ConfirmDeleteFile from '../modal/ConfirmDeleteFile';\r\nimport ConfirmDownloadAdmin from '../modal/ConfirmDowloadAdmin';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nconst MenuFile = (props) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [file, setFile] = useState({ ...props.file });\r\n  const handleMoreVertIconClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMoreVertIconClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <div>\r\n      <Hidden smDown>\r\n        <IconButton\r\n          className={classes.tableMargin}\r\n          onClick={handleMoreVertIconClick}\r\n        >\r\n          <MoreVertIcon></MoreVertIcon>\r\n        </IconButton>\r\n      </Hidden>\r\n      <Hidden mdUp>\r\n        <IconButton\r\n          className={classes.iconButton}\r\n          onClick={handleMoreVertIconClick}\r\n        >\r\n          <MoreVertIcon></MoreVertIcon>\r\n        </IconButton>\r\n      </Hidden>\r\n      <Menu\r\n        className={classes.menu}\r\n        id='simple-menu'\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        onClose={handleMoreVertIconClose}\r\n      >\r\n        <ConfirmDeleteFile\r\n          file={file}\r\n          handleDelete={props.handleDelete}\r\n          closeMenu={handleMoreVertIconClose}\r\n        />\r\n\r\n        <ConfirmDownloadAdmin file={file} closeMenu={handleMoreVertIconClose} />\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\nexport default MenuFile;\r\n","import React, { useEffect, Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getFiles } from \"../../actions/fileActions\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  Grid,\r\n  Breadcrumbs,\r\n  Typography,\r\n  Menu,\r\n  MenuItem,\r\n  IconButton,\r\n  Checkbox,\r\n  Hidden,\r\n  Box,\r\n  CircularProgress,\r\n} from \"@material-ui/core/\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport ConfirmDeleteFiles from \"../modal/ConfirmDeleteFiles\";\r\nimport useStyles from \"../../style/StyleFiles\";\r\nimport MenuFile from \"../menu/MenuFile\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { deleteFile } from \"../../actions/fileActions\";\r\nimport FileType from \"../filetype/Filetypes\";\r\n\r\nconst ViewFilesAdmin = (props) => {\r\n  const classes = useStyles();\r\n  const { files, loading } = useSelector((state) => state.file);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { authenticated, authdata } = useSelector((state) => state.auth);\r\n  const [folderID, setFolderID] = React.useState();\r\n  const [folderName, setFolderName] = React.useState();\r\n\r\n  useEffect(() => {\r\n    if (props.location.state) {\r\n      const { folder_id, folder_name } = props.location.state;\r\n      setFolderID(folder_id);\r\n      setFolderName(folder_name);\r\n      dispatch(getFiles(folder_id));\r\n    } else if (!props.location.state) {\r\n      if (authenticated) {\r\n        if (authdata.authorized_id == 1) {\r\n          history.push(\"/\");\r\n        }\r\n        if (authdata.authorized_id == 2) {\r\n          history.push(\"/viewfolderadmin/\");\r\n        }\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [index, setIndex] = React.useState([]);\r\n  const snackAlert = (msg, variant) => {\r\n    enqueueSnackbar(msg, {\r\n      variant: variant,\r\n    });\r\n  };\r\n  const handleSelectClick = (event, id, name) => {\r\n    const selectedIndex = index.indexOf(id);\r\n    console.log(selectedIndex);\r\n    let newSelected = [];\r\n    let selectIndex = [];\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, {\r\n        file_name: name,\r\n        file_id: id,\r\n        check_status: event.target.checked,\r\n      });\r\n      selectIndex = selectIndex.concat(index, id);\r\n    } else if (selectedIndex === 0) {\r\n      selectIndex = selectIndex.concat(index.slice(1));\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      selectIndex = selectIndex.concat(index.slice(0, -1));\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      selectIndex = selectIndex.concat(\r\n        index.slice(0, selectedIndex),\r\n        index.slice(selectedIndex + 1)\r\n      );\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n    setIndex(selectIndex);\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const updateList = () => {\r\n    dispatch(getFiles(folderID));\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleDelete = async (files) => {\r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i];\r\n      await dispatch(deleteFile(file.file_id, authdata.user_id, snackAlert));\r\n    }\r\n    updateList();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid container className={classes.gridContainer}>\r\n        <Paper className={classes.paper}>\r\n          <Grid container>\r\n            <Breadcrumbs\r\n              className={classes.breadcrumbs}\r\n              separator={\r\n                <NavigateNextIcon className={classes.NavigateNextIcon} />\r\n              }\r\n              aria-label=\"breadcrumb\"\r\n            >\r\n              <Link to={{ pathname: \"/viewfolderadmin\" }}>\r\n                <Typography className={classes.opacity}>\r\n                  โฟลเดอร์ทั้งหมด\r\n                </Typography>\r\n              </Link>\r\n              <Typography className={classes.text}>{folderName}</Typography>\r\n            </Breadcrumbs>\r\n          </Grid>\r\n        </Paper>\r\n\r\n        <Paper className={classes.paper}>\r\n          <Hidden smDown>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\" style={{ width: \"1%\" }}></TableCell>\r\n                  <TableCell className={classes.tableCellName}>\r\n                    <Typography color=\"textPrimary\" className={classes.text}>\r\n                      ชื่อไฟล์\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Typography color=\"textPrimary\" className={classes.text}>\r\n                      วันที่อัพโหลด\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Typography color=\"textPrimary\" className={classes.text}>\r\n                      ตัวเลือก\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading && files !== null\r\n                  ? files.map((file) => {\r\n                    return (\r\n                      <TableRow key={file.file_id} hover>\r\n                        <TableCell align=\"center\">\r\n                          <Checkbox\r\n                            className={classes.tableMargin}\r\n                            onClick={(event) =>\r\n                              handleSelectClick(\r\n                                event,\r\n                                file.file_id,\r\n                                file.file_name\r\n                              )\r\n                            }\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Grid container className={classes.iconAlign}>\r\n                            <Grid>\r\n                              <FileType typefile={file.file_name} />\r\n                            </Grid>\r\n                            <Grid>\r\n                              <Typography\r\n                                color=\"textPrimary\"\r\n                                className={classes.text}\r\n                              >\r\n                                {file.file_name}\r\n                              </Typography>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Typography className={classes.text}>\r\n                            {moment\r\n                              .utc(file.file_created)\r\n                              .add(3, \"minutes\")\r\n                              .format(\"DD-MM-YYYY HH:mm\")}\r\n                          </Typography>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <MenuFile file={file} handleDelete={handleDelete} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })\r\n                  : null}\r\n              </TableBody>\r\n            </Table>\r\n          </Hidden>\r\n          <Hidden mdUp>\r\n            <Table>\r\n              <TableBody>\r\n                {!loading && files !== null\r\n                  ? files.map((file) => (\r\n                    <TableRow key={file.file_id} hover>\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        className={classes.iconCheckBox}\r\n                      >\r\n                        <Checkbox\r\n                          onClick={(event) =>\r\n                            handleSelectClick(\r\n                              event,\r\n                              file.file_id,\r\n                              file.file_name\r\n                            )\r\n                          }\r\n                        />\r\n                      </TableCell>\r\n\r\n                      <TableCell>\r\n                        <Grid container className={classes.iconAlign}>\r\n                          <Grid>\r\n                            <FileType typefile={file.file_name} />\r\n                          </Grid>\r\n                          <Grid>\r\n                            <div className={classes.nowrapMany}>\r\n                              <Box\r\n                                className={classes.nowrapTextMany}\r\n                                textOverflow=\"ellipsis\"\r\n                                overflow=\"hidden\"\r\n                              >\r\n                                {file.file_name}\r\n                              </Box>\r\n                            </div>\r\n                            <Typography className={classes.textDate}>\r\n                              {moment\r\n                                .utc(file.file_created)\r\n                                .add(3, \"minutes\")\r\n                                .format(\"DD-MM-YYYY HH:mm\")}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <MenuFile file={file} handleDelete={handleDelete} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n                  : null}\r\n              </TableBody>\r\n            </Table>\r\n          </Hidden>\r\n          {files === null ? (\r\n            <Table>\r\n              <TableRow>\r\n                <TableCell className={classes.emptyTable}>\r\n                  <Typography>{\" โฟลเดอร์นี้ว่างเปล่า \"}</Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            </Table>\r\n          ) : null}\r\n          {loading && (\r\n            <div className={classes.loading}>\r\n              <CircularProgress />\r\n            </div>\r\n          )}\r\n          {selected.length != 0 && (\r\n            <ConfirmDeleteFiles\r\n              handleDelete={handleDelete}\r\n              snackAlert={snackAlert}\r\n              listDelFiles={selected}\r\n              refresh={updateList}\r\n            />\r\n          )}\r\n        </Paper>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default ViewFilesAdmin;\r\n","import React, { useState } from 'react';\r\nimport useStyles from '../../style/StyleFiles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Switch, Hidden } from '@material-ui/core/';\r\nimport { updateActiveUser, getUser } from '../../actions/authActions';\r\n\r\nconst MenuUser = (props) => {\r\n  const { userData } = props;\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const [switchstatus, setSwitchstatus] = useState({\r\n    switchchecked: userData.user_active,\r\n  });\r\n\r\n  const [user, setUser] = useState({\r\n    user_id: userData.user_id,\r\n    user_active: userData.user_active,\r\n    authorized_id: userData.authorized_id,\r\n  });\r\n\r\n  const { switchchecked } = switchstatus;\r\n  const { user_active } = user;\r\n\r\n  const handleChange = async () => {\r\n    if (user_active === false) {\r\n      await dispatch(\r\n        updateActiveUser(\r\n          {\r\n            user_id: userData.user_id,\r\n            user_active: true,\r\n            authorized_id: userData.authorized_id,\r\n          },\r\n          props.snackAlert,\r\n          'updateActive'\r\n        )\r\n      );\r\n      await dispatch(getUser(userData.user_id));\r\n      setSwitchstatus({\r\n        ...switchstatus,\r\n        switchchecked: !user_active,\r\n      });\r\n      setUser({ ...user, user_active: true });\r\n    }\r\n    if (user_active === true) {\r\n      await dispatch(\r\n        updateActiveUser(\r\n          {\r\n            user_id: userData.user_id,\r\n            user_active: false,\r\n            authorized_id: userData.authorized_id,\r\n          },\r\n          props.snackAlert,\r\n          'updateActive'\r\n        )\r\n      );\r\n      await dispatch(getUser(userData.user_id));\r\n      setSwitchstatus({ ...switchstatus, switchchecked: !user_active });\r\n      setUser({ ...user, user_active: false });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Hidden smDown className={classes.tableMargin}>\r\n        <Switch checked={switchchecked} onChange={handleChange}></Switch>\r\n      </Hidden>\r\n      <Hidden mdUp className={classes.iconButton}>\r\n        <Switch checked={switchchecked} onChange={handleChange}></Switch>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuUser;\r\n","import React, { useState, useEffect } from 'react';\r\nimport useStyles from '../../style/StyleFiles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Switch } from '@material-ui/core/';\r\nimport { updateActiveUser, getUser } from '../../actions/authActions';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst ManageUserSwitchAuth = (props) => {\r\n  const { userData } = props;\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const [switchstatus, setSwitchstatus] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (userData.authorized_id === 1) {\r\n      setSwitchstatus(false);\r\n    } else {\r\n      setSwitchstatus(true);\r\n    }\r\n  }, []);\r\n\r\n  const [user, setUser] = useState({\r\n    user_id: userData.user_id,\r\n    user_active: userData.user_active,\r\n    authorized_id: userData.authorized_id,\r\n  });\r\n\r\n  const { authorized_id } = user;\r\n\r\n  const handleChange = async () => {\r\n    if (authorized_id === 1) {\r\n      await dispatch(\r\n        updateActiveUser(\r\n          {\r\n            user_id: userData.user_id,\r\n            user_active: userData.user_active,\r\n            authorized_id: 2,\r\n          },\r\n          props.snackAlert,\r\n          'updateAuth'\r\n        )\r\n      );\r\n      await dispatch(getUser(userData.user_id));\r\n      setSwitchstatus(!switchstatus);\r\n      setUser({ ...user, authorized_id: 2 });\r\n    }\r\n    if (authorized_id === 2) {\r\n      await dispatch(\r\n        updateActiveUser(\r\n          {\r\n            user_id: userData.user_id,\r\n            user_active: userData.user_active,\r\n            authorized_id: 1,\r\n          },\r\n          props.snackAlert,\r\n          'updateAuth'\r\n        )\r\n      );\r\n      await dispatch(getUser(userData.user_id));\r\n      setSwitchstatus(!switchstatus);\r\n      setUser({ ...user, authorized_id: 1 });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Hidden smDown className={classes.tableMargin}>\r\n        <Switch checked={switchstatus} onChange={handleChange}></Switch>\r\n      </Hidden>\r\n      <Hidden mdUp className={classes.iconButton}>\r\n        <Switch checked={switchstatus} onChange={handleChange}></Switch>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageUserSwitchAuth;\r\n","import React, { useEffect, Fragment, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Circular from \"../layout/Circular\";\r\nimport { getUserAll } from \"../../actions/authActions\";\r\nimport Registor from \"../authen/Registor\";\r\nimport useStyles from \"../../style/StyleFiles\";\r\nimport MenuUser from \"../menu/MenuUser\";\r\nimport ManageUserSwitchAuth from \"../menu/ManageUserSwitchAuth\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Grid,\r\n  Breadcrumbs,\r\n  Typography,\r\n  IconButton,\r\n} from '@material-ui/core/';\r\nimport { useSnackbar } from 'notistack';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nconst ManageUserFirst = () => {\r\n  const classes = useStyles();\r\n  const { loading, users } = useSelector((state) => state.auth);\r\n  const { authenticated, authdata } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const snackAlert = (msg, variant) => {\r\n    enqueueSnackbar(msg, {\r\n      variant: variant,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserAll());\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Circular />;\r\n  }\r\n  const updateUser = () => {\r\n    dispatch(getUserAll());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {authenticated && (\r\n        <div>\r\n          {authdata.authorized_id == 2 ? (\r\n            <Fragment>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Paper className={classes.paper}>\r\n                  <Grid container>\r\n                    <Breadcrumbs\r\n                      className={classes.breadcrumbs}\r\n                      separator={\r\n                        <NavigateNextIcon\r\n                          className={classes.NavigateNextIcon}\r\n                        />\r\n                      }\r\n                      aria-label=\"breadcrumb\"\r\n                    >\r\n                      <Typography className={classes.text}>\r\n                        จัดการผู้ใช้งาน\r\n                      </Typography>\r\n                    </Breadcrumbs>\r\n                  </Grid>\r\n                </Paper>\r\n\r\n                <Paper className={classes.paper}>\r\n                  <Table className={classes.table}>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell className={classes.tableCellName}>\r\n                          <Typography\r\n                            color=\"textPrimary\"\r\n                            className={classes.text}\r\n                          >\r\n                            ชื่อผู้ใช้งาน\r\n                          </Typography>\r\n                        </TableCell>\r\n                        <TableCell style={{ width: \"20%\" }} align=\"center\">\r\n                          <Typography\r\n                            color=\"textPrimary\"\r\n                            className={classes.text}\r\n                          >\r\n                            สิทธิ์ผู้ดูแลระบบ\r\n                          </Typography>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Typography\r\n                            color=\"textPrimary\"\r\n                            className={classes.text}\r\n                          >\r\n                            สิทธิ์การใช้งาน\r\n                          </Typography>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\"></TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {users !== null\r\n                        ? users.map((user, index) => (\r\n                          <TableRow key={index}>\r\n                            <Hidden xsDown>\r\n                              <TableCell>\r\n                                {/* authorized_id : 1 = user, 2 = Admin */}\r\n                                {user.authorized_id === 1 &&\r\n                                  user.user_active === true ? (\r\n                                    <Link\r\n                                      to={{\r\n                                        pathname:\r\n                                          '/manageusersecond/' + user.user_id,\r\n                                        state: {\r\n                                          user_id: user.user_id,\r\n                                          user_firstname: user.user_firstname,\r\n                                          user_active: user.user_active,\r\n                                        },\r\n                                      }}\r\n                                    >\r\n                                      <Grid\r\n                                        container\r\n                                        className={classes.iconAlign}\r\n                                      >\r\n                                        <Grid>\r\n                                          {user.user_active ? (\r\n                                            <PersonIcon\r\n                                              className={classes.iconPersonTable}\r\n                                            />\r\n                                          ) : (\r\n                                              <PersonIcon\r\n                                                className={\r\n                                                  classes.iconPersonTableUnActive\r\n                                                }\r\n                                              />\r\n                                            )}\r\n                                        </Grid>\r\n                                        <Grid>\r\n                                          <Typography\r\n                                            color='textPrimary'\r\n                                            className={classes.text}\r\n                                          >\r\n                                            {`${user.user_name}  ( ${user.user_firstname}  ${user.user_lastname} )`}\r\n                                          </Typography>\r\n                                        </Grid>\r\n                                        <Grid>\r\n                                          {user.authorized_id == 2 ? (\r\n                                            <StarIcon\r\n                                              className={classes.iconStar}\r\n                                            />\r\n                                          ) : (\r\n                                              ''\r\n                                            )}\r\n                                        </Grid>\r\n                                      </Grid>\r\n                                    </Link>\r\n                                  ) : (\r\n                                    <Grid container className={classes.iconAlign}>\r\n                                      <Grid>\r\n                                        {user.user_active ? (\r\n                                          <PersonIcon\r\n                                            className={classes.iconPersonTable}\r\n                                          />\r\n                                        ) : (\r\n                                            <PersonIcon\r\n                                              className={\r\n                                                classes.iconPersonTableUnActive\r\n                                              }\r\n                                            />\r\n                                          )}\r\n                                      </Grid>\r\n                                      <Grid>\r\n                                        <Typography\r\n                                          color=\"textPrimary\"\r\n                                          className={classes.text}\r\n                                        >\r\n                                          {`${user.user_name}  ( ${user.user_firstname}  ${user.user_lastname} )`}\r\n                                        </Typography>\r\n                                      </Grid>\r\n                                      <Grid>\r\n                                        {user.authorized_id == 2 ? (\r\n                                          <StarIcon\r\n                                            className={classes.iconStar}\r\n                                          />\r\n                                        ) : (\r\n                                            \"\"\r\n                                          )}\r\n                                      </Grid>\r\n                                    </Grid>\r\n                                  )}\r\n                              </TableCell>\r\n                              <TableCell align='center'>\r\n                                <ManageUserSwitchAuth\r\n                                  userData={user}\r\n                                  snackAlert={snackAlert}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell align='center'>\r\n                                <MenuUser\r\n                                  userData={user}\r\n                                  snackAlert={snackAlert}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell align='center'>\r\n                                {user.authorized_id === 2 ||\r\n                                  (user.user_active && (\r\n                                    <Link\r\n                                      to={{\r\n                                        pathname:\r\n                                          '/manageusersecond/' + user.user_id,\r\n                                        state: {\r\n                                          user_id: user.user_id,\r\n                                          user_firstname: user.user_firstname,\r\n                                          user_active: user.user_active,\r\n                                        },\r\n                                      }}\r\n                                    >\r\n                                      <IconButton\r\n                                        className={classes.tableMargin}\r\n                                      >\r\n                                        <NavigateNextIcon></NavigateNextIcon>\r\n                                      </IconButton>\r\n                                    </Link>\r\n                                  ))}\r\n                              </TableCell>\r\n                            </Hidden>\r\n\r\n                            <Hidden smUp>\r\n                              <TableCell >\r\n                                {/* authorized_id : 1 = user, 2 = Admin */}\r\n                                {user.authorized_id === 1 &&\r\n                                  user.user_active === true ? (\r\n                                    <Link\r\n                                      to={{\r\n                                        pathname:\r\n                                          '/manageusersecond/' + user.user_id,\r\n                                        state: {\r\n                                          user_id: user.user_id,\r\n                                          user_firstname: user.user_firstname,\r\n                                          user_active: user.user_active,\r\n                                        },\r\n                                      }}\r\n                                    >\r\n                                      <Grid\r\n                                        container\r\n                                        className={classes.iconAlign}\r\n                                      >\r\n\r\n                                        <Grid>\r\n                                          <Typography\r\n                                            color='textPrimary'\r\n                                            className={classes.text}\r\n                                          >\r\n                                            {user.user_name}\r\n                                          </Typography>\r\n                                          <Typography\r\n                                            color='textPrimary'\r\n                                            className={classes.textDate}\r\n                                          >\r\n                                            {user.user_firstname}\r\n                                          </Typography>\r\n                                          <Typography\r\n                                            color='textPrimary'\r\n                                            className={classes.textDate}\r\n                                          >\r\n                                            {user.user_lastname}\r\n                                          </Typography>\r\n                                        </Grid>\r\n                                        <Grid>\r\n                                          {user.authorized_id == 2 ? (\r\n                                            <StarIcon\r\n                                              className={classes.iconStarSmall}\r\n                                            />\r\n                                          ) : (\r\n                                              ''\r\n                                            )}\r\n                                        </Grid>\r\n                                      </Grid>\r\n                                    </Link>\r\n                                  ) : (\r\n                                    <Grid container className={classes.iconAlign}>\r\n                                      <Grid>\r\n                                        <Typography\r\n                                          color='textPrimary'\r\n                                          className={classes.text}\r\n                                        >\r\n                                          {user.user_name}\r\n\r\n                                          {user.authorized_id == 2 ? (\r\n                                            <StarIcon\r\n                                              className={classes.iconStarSmall}\r\n                                            />\r\n                                          ) : (\r\n                                              ''\r\n                                            )}\r\n\r\n                                        </Typography>\r\n                                        <Typography\r\n                                          color='textPrimary'\r\n                                          className={classes.textDate}\r\n                                        >\r\n                                          {user.user_firstname}\r\n                                        </Typography>\r\n                                        <Typography\r\n                                          color='textPrimary'\r\n                                          className={classes.textDate}\r\n                                        >\r\n                                          {user.user_lastname}\r\n                                        </Typography>\r\n                                      </Grid>\r\n                                    </Grid>\r\n                                  )}\r\n                              </TableCell>\r\n                              <TableCell align='center' >\r\n                                <ManageUserSwitchAuth\r\n                                  userData={user}\r\n                                  snackAlert={snackAlert}\r\n                                />\r\n                              </TableCell >\r\n                              <TableCell align='center' >\r\n                                <MenuUser\r\n                                  userData={user}\r\n                                  snackAlert={snackAlert}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell align='center'>\r\n                                {user.authorized_id === 2 ||\r\n                                  (user.user_active && (\r\n                                    <Link\r\n                                      to={{\r\n                                        pathname:\r\n                                          '/manageusersecond/' + user.user_id,\r\n                                        state: {\r\n                                          user_id: user.user_id,\r\n                                          user_firstname: user.user_firstname,\r\n                                          user_active: user.user_active,\r\n                                        },\r\n                                      }}\r\n                                    >\r\n                                      <IconButton\r\n                                        className={classes.iconButton}\r\n                                      >\r\n                                        <NavigateNextIcon></NavigateNextIcon>\r\n                                      </IconButton>\r\n                                    </Link>\r\n                                  ))}\r\n                              </TableCell>\r\n                            </Hidden>\r\n                          </TableRow>\r\n                        ))\r\n                        : console.log('Nodata')}\r\n                    </TableBody>\r\n                  </Table>\r\n                </Paper>\r\n              </Grid>\r\n              <Registor updateUser={updateUser} snackAlert={snackAlert} />\r\n            </Fragment>\r\n          ) : (\r\n              <Redirect to=\"/\" />\r\n            )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ManageUserFirst;\r\n","import React, { useState } from \"react\";\r\nimport useStyles from \"../../style/StyleFiles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Checkbox, TableCell } from \"@material-ui/core/\";\r\nimport { updateAccessFolder } from \"../../actions/authActions\";\r\nconst MenuUserCheckUpload = (props) => {\r\n  const { userData, folderData } = props;\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  let click = \"\";\r\n  const [folder, setFolder] = useState({\r\n    user_id: parseInt(userData),\r\n    folder_id: folderData.folder_id,\r\n    access_download: folderData.access_download,\r\n    access_upload: folderData.access_upload,\r\n  });\r\n\r\n  const [switchstatus, setSwitchstatus] = useState({\r\n    checkedDownload: folderData.access_download,\r\n    checkedUpload: folderData.access_upload,\r\n  });\r\n\r\n  const { user_id, folder_id, access_download, access_upload } = folder;\r\n  const { checkedDownload, checkedUpload } = switchstatus;\r\n  const handleChange = (event) => {\r\n    setSwitchstatus({ access_download: event.target.checked });\r\n  };\r\n\r\n  const handleDownloadClick = async (accessDownload) => {\r\n    click = \"download\";\r\n    console.log(click);\r\n    if (accessDownload === true) {\r\n      await dispatch(\r\n        updateAccessFolder(\r\n          {\r\n            user_id: parseInt(userData),\r\n            folder_id: folderData.folder_id,\r\n            access_download: false,\r\n            access_upload: access_upload,\r\n          },\r\n          props.snackAlert,\r\n          click\r\n        )\r\n      );\r\n      setFolder({ ...folder, access_download: false });\r\n      setSwitchstatus({\r\n        ...switchstatus,\r\n        checkedDownload: !access_download,\r\n      });\r\n    }\r\n    if (accessDownload === false) {\r\n      await dispatch(\r\n        updateAccessFolder(\r\n          {\r\n            user_id: parseInt(userData),\r\n            folder_id: folderData.folder_id,\r\n            access_download: true,\r\n            access_upload: access_upload,\r\n          },\r\n          props.snackAlert,\r\n          click\r\n        )\r\n      );\r\n      setFolder({ ...folder, access_download: true });\r\n      setSwitchstatus({\r\n        ...switchstatus,\r\n        checkedDownload: !access_download,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleUploadClick = async (accessUpload) => {\r\n    click = \"upload\";\r\n    console.log(click);\r\n    if (accessUpload === true) {\r\n      await dispatch(\r\n        updateAccessFolder(\r\n          {\r\n            user_id: parseInt(userData),\r\n            folder_id: folderData.folder_id,\r\n            access_download: access_download,\r\n            access_upload: false,\r\n          },\r\n          props.snackAlert,\r\n          click\r\n        )\r\n      );\r\n      setFolder({ ...folder, access_upload: false });\r\n      setSwitchstatus({\r\n        ...switchstatus,\r\n        checkedUpload: !access_upload,\r\n      });\r\n    }\r\n    if (accessUpload === false) {\r\n      await dispatch(\r\n        updateAccessFolder(\r\n          {\r\n            user_id: parseInt(userData),\r\n            folder_id: folderData.folder_id,\r\n            access_download: access_download,\r\n            access_upload: true,\r\n          },\r\n          props.snackAlert,\r\n          click\r\n        )\r\n      );\r\n      setFolder({ ...folder, access_upload: true });\r\n      setSwitchstatus({\r\n        ...switchstatus,\r\n        checkedUpload: !access_upload,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableCell key={folderData.folder_id} align=\"center\">\r\n        <Checkbox\r\n          className={classes.tableMargin}\r\n          checked={checkedDownload}\r\n          onChange={(event) => handleDownloadClick(access_download)}\r\n          inputProps={{ \"aria-label\": \"Allow Download\" }}\r\n        />\r\n      </TableCell>\r\n      <TableCell align=\"center\">\r\n        <Checkbox\r\n          className={classes.tableMargin}\r\n          checked={checkedUpload}\r\n          onChange={(event) => handleUploadClick(access_upload)}\r\n          inputProps={{ \"aria-label\": \"Allow Upload\" }}\r\n        />\r\n      </TableCell>\r\n    </>\r\n  );\r\n};\r\nexport default MenuUserCheckUpload;\r\n","import React, { useEffect, Fragment, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Grid,\r\n  Breadcrumbs,\r\n  Typography,\r\n} from \"@material-ui/core/\";\r\n\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport { getAllFoldersAdmin } from \"../../actions/folderActions\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport useStyles from \"../../style/StyleFiles\";\r\nimport Circular from \"../layout/Circular\";\r\nimport MenuUserCheckUpload from \"../menu/MenuUserCheckUpload\";\r\nimport MenuUserSecondSwitch from \"../menu/MenuUserSecondSwitch\";\r\n\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nconst ManageUserSecond = (props) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const classes = useStyles();\r\n\r\n  const { authenticated, authdata } = useSelector((state) => state.auth);\r\n  const { foldersadmin, loading } = useSelector((state) => state.folder);\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const { user_id, user_firstname, user_active } = \"\";\r\n  const [userID, setUserID] = useState();\r\n  const [userfirstname, setFirstname] = useState();\r\n  const [userActive, setUserActive] = useState();\r\n  useEffect(() => {\r\n    if (props.location.state) {\r\n      const { user_id, user_firstname, user_active } = props.location.state;\r\n      setUserID(user_id);\r\n      setFirstname(user_firstname);\r\n      setUserActive(user_active);\r\n      dispatch(getAllFoldersAdmin(user_id));\r\n    } else if (!props.location.state) {\r\n      if (authenticated) {\r\n        if (authdata.authorized_id == 1) {\r\n          history.push(\"/\");\r\n        }\r\n        if (authdata.authorized_id == 2) {\r\n          history.push(\"/manageuserfirst/\");\r\n        }\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const snackAlert = (msg, variant) => {\r\n    enqueueSnackbar(msg, {\r\n      variant: variant,\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return <Circular />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {props.location.state != null ? (\r\n        <Fragment>\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            <Paper className={classes.paper}>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"left\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Breadcrumbs\r\n                  className={classes.breadcrumbs}\r\n                  separator={\r\n                    <NavigateNextIcon className={classes.NavigateNextIcon} />\r\n                  }\r\n                  aria-label=\"breadcrumb\"\r\n                >\r\n                  <Link to={{ pathname: \"/manageuserfirst\" }}>\r\n                    <Typography className={classes.opacity} color=\"textPrimary\">\r\n                      จัดการผู้ใช้งาน\r\n                    </Typography>\r\n                  </Link>\r\n                  <Typography className={classes.text} color=\"textPrimary\">\r\n                    ตั้งค่าการใช้งาน\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </Grid>\r\n            </Paper>\r\n\r\n            <Paper className={classes.paper}>\r\n              <Table className={classes.table}>\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell border={0} style={{ borderBottom: \"0px\" }}>\r\n                      <Grid container className={classes.iconAlign}>\r\n                        <Grid>\r\n                          {userActive ? (\r\n                            <PersonIcon className={classes.iconPersonTable} />\r\n                          ) : (\r\n                              <PersonIcon\r\n                                className={classes.iconPersonTableUnActive}\r\n                              />\r\n                            )}\r\n                        </Grid>\r\n                        <Grid>\r\n                          <Typography\r\n                            color=\"textPrimary\"\r\n                            className={classes.text}\r\n                          >\r\n                            {userfirstname}\r\n                          </Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </TableCell>\r\n\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n\r\n            <Paper className={classes.paper}>\r\n              <Table className={classes.table}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell style={{ width: '70%' }} align=\"center\" >\r\n                      <Typography color=\"textPrimary\" className={classes.text}>\r\n                        ชื่อโฟลเดอร์\r\n                      </Typography>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Typography color=\"textPrimary\" className={classes.text}>\r\n                        ดาวน์โหลด\r\n                      </Typography>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Typography color=\"textPrimary\" className={classes.text}>\r\n                        อัพโหลด\r\n                      </Typography>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {!loading && foldersadmin !== null\r\n                    ? foldersadmin.map((folder, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell>\r\n                          <Grid container className={classes.iconAlign}>\r\n                            <Grid >\r\n                              <FolderIcon\r\n                                className={classes.iconFolderTable}\r\n                              />\r\n                            </Grid>\r\n                            <Grid >\r\n                              <Typography\r\n                                color=\"textPrimary\"\r\n                                className={classes.text}\r\n                              >\r\n                                {folder.folder_name}\r\n                              </Typography>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </TableCell>\r\n\r\n                        <MenuUserCheckUpload\r\n                          userData={userID}\r\n                          folderData={folder}\r\n                          snackAlert={snackAlert}\r\n                        />\r\n                      </TableRow>\r\n                    ))\r\n                    : console.log(\"Nodata\")}\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n          </Grid>\r\n        </Fragment>\r\n      ) : (\r\n          <Redirect to=\"/manageuserfirst\" />\r\n        )}\r\n    </div>\r\n  );\r\n};\r\nexport default ManageUserSecond;\r\n","import React from \"react\"\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport useStyles from '../../style/StyleFiles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './Notfound'\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Paper,\r\n    Grid,\r\n    Breadcrumbs,\r\n    Typography,\r\n} from '@material-ui/core/';\r\n\r\n\r\n\r\nconst Notfound = () => {\r\n    const classes = useStyles()\r\n\r\n    const { authenticated, authdata } = useSelector((state) => state.auth);\r\n\r\n    return (\r\n        <div className={classes.modal}>\r\n            <div>\r\n                <div>\r\n                    <Typography variant=\"h1\">404</Typography>\r\n                </div>\r\n                <h2>อ๊ะ! ไม่พบหน้านี้</h2>\r\n                <p>ขออภัยไม่มีหน้าที่ลบอยู่หน้าถูกลบไปแล้ว เปลี่ยนชื่อหรือไม่สามารถใช้งานได้ชั่วคราว</p>\r\n                {authenticated &&\r\n                    <div>\r\n                        {authdata.authorized_id == 1\r\n                            ?\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                component={Link}\r\n                                to={'/'}\r\n                            >\r\n                                กลับไปหน้าหลัก\r\n                            </Button>\r\n                            :\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                component={Link}\r\n                                to={'/viewfolderadmin'}\r\n                            >\r\n                                กลับไปหน้าหลัก\r\n                            </Button>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notfound","import {\r\n  GET_LOGS,\r\n  GET_LOGS_DELETE,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  SEARCH_LOGS,\r\n} from './types';\r\nconst url = 'http://192.168.5.230:8080';\r\n// Get logs from server\r\nexport const getLogs = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(`${url}/history/file/upload`);\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: GET_LOGS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getLogsDelete = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(`${url}/history/file/delete`);\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: GET_LOGS_DELETE,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response,\r\n    });\r\n  }\r\n};\r\n\r\n// Search server logs\r\nexport const searchLogs = (text) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(`${url}/logs?q=${text}`);\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: SEARCH_LOGS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n","import React, { useEffect, Fragment } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getLogs } from \"../../actions/logActions\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Grid,\r\n  Breadcrumbs,\r\n  Typography,\r\n} from \"@material-ui/core/\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport useStyles from \"../../style/StyleFiles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport FileType from \"../filetype/Filetypes\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nconst HistoryUpload = (props) => {\r\n  const classes = useStyles();\r\n  const { logs, loading } = useSelector((state) => state.log);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { authenticated, authdata } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    dispatch(getLogs());\r\n    if (authenticated) {\r\n      if (authdata.authorized_id == 1) {\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid container className={classes.gridContainer}>\r\n        <Paper className={classes.paper}>\r\n          <Grid container>\r\n            <Breadcrumbs\r\n              className={classes.breadcrumbs}\r\n              separator={\r\n                <NavigateNextIcon className={classes.NavigateNextIcon} />\r\n              }\r\n              aria-label=\"breadcrumb\"\r\n            >\r\n              <Typography className={classes.text} color=\"textPrimary\">\r\n                ประวัติการอัพโหลด\r\n              </Typography>\r\n            </Breadcrumbs>\r\n          </Grid>\r\n        </Paper>\r\n\r\n        <Paper className={classes.paper}>\r\n          <Hidden smDown>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className={classes.tableCellName}>\r\n                    <Typography color=\"textPrimary\" className={classes.text}>\r\n                      ชื่อไฟล์\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Typography color=\"textPrimary\" className={classes.text}>\r\n                      ชื่อโฟลเดอร์\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Typography color=\"textPrimary\" className={classes.text}>\r\n                      วันที่อัพโหลด\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Typography color=\"textPrimary\" className={classes.text}>\r\n                      ผู้อัพโหลด\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading && logs !== null\r\n                  ? logs.map((log) => (\r\n                    <TableRow key={log.file_id} hover>\r\n                      <TableCell>\r\n                        <Grid container className={classes.iconAlign}>\r\n                          <Grid>\r\n                            <FileType typefile={log.file_name} />\r\n                          </Grid>\r\n                          <Grid>\r\n                            <Typography\r\n                              color=\"textPrimary\"\r\n                              className={classes.text}\r\n                            >\r\n                              {log.file_name}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <Typography className={classes.text}>\r\n                          {log.folder_name}\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <Typography className={classes.text}>\r\n                          {moment\r\n                            .utc(log.file_created)\r\n                            .add(3, \"minutes\")\r\n                            .format(\"DD-MM-YYYY HH:mm\")}\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <Typography className={classes.text}>\r\n                          {log.user_firstname} {log.user_lastname}\r\n                        </Typography>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n                  : null}\r\n              </TableBody>\r\n            </Table>\r\n          </Hidden>\r\n          <Hidden mdUp>\r\n            <Table>\r\n              <TableBody>\r\n                {!loading && logs !== null\r\n                  ? logs.map((log) => (\r\n                    <TableRow key={log.file_id} hover>\r\n                      <TableCell>\r\n                        <Grid container className={classes.iconAlign}>\r\n                          <Grid>\r\n                            <FileType typefile={log.file_name} />\r\n                          </Grid>\r\n                          <Grid>\r\n                            <Typography\r\n                              color=\"textPrimary\"\r\n                              className={classes.text}\r\n                            >\r\n                              {log.file_name}\r\n                            </Typography>\r\n                            <Hidden xsDown>\r\n                              <Grid container direction=\"row\">\r\n                                <Grid>\r\n                                  <Typography className={classes.textDate} style={{ marginRight: 10 }}>\r\n                                    <ScheduleIcon\r\n                                      className={classes.iconHistory}\r\n                                    />\r\n                                    {moment\r\n                                      .utc(log.file_created)\r\n                                      .add(3, \"minutes\")\r\n                                      .format(\"DD-MM-YYYY HH:mm\")}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid>\r\n                                  <Typography className={classes.textDate} style={{ marginRight: 10 }}>\r\n                                    <FolderIcon className={classes.iconHistory} />\r\n                                    {log.folder_name}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid>\r\n                                  <Typography className={classes.textDate} style={{ marginRight: 10 }}>\r\n                                    <PersonIcon className={classes.iconHistory} />\r\n                                    {log.user_firstname} {log.user_lastname}\r\n                                  </Typography>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Hidden>\r\n                            <Hidden smUp>\r\n                              <Grid >\r\n                                <Typography className={classes.textDate}>\r\n                                  <ScheduleIcon\r\n                                    className={classes.iconHistory}\r\n                                  />\r\n                                  {moment\r\n                                    .utc(log.file_created)\r\n                                    .add(3, \"minutes\")\r\n                                    .format(\"DD-MM-YYYY HH:mm\")}\r\n                                </Typography>\r\n                                <Typography className={classes.textDate}>\r\n                                  <FolderIcon className={classes.iconHistory} />\r\n                                  {log.folder_name}\r\n                                </Typography>\r\n                                <Typography className={classes.textDate}>\r\n                                  <PersonIcon className={classes.iconHistory} />\r\n                                  {log.user_firstname} {log.user_lastname}\r\n                                </Typography>\r\n                              </Grid>\r\n                            </Hidden>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n                  : null}\r\n              </TableBody>\r\n            </Table>\r\n          </Hidden>\r\n          {logs === null ? (\r\n            <Table>\r\n              <TableRow>\r\n                <TableCell className={classes.emptyTable}>\r\n                  <Typography>{\" ไม่มีประวัติการอัพโหลดเอกสาร \"}</Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            </Table>\r\n          ) : null}\r\n          {loading && (\r\n            <div className={classes.loading}>\r\n              <CircularProgress />\r\n            </div>\r\n          )}\r\n        </Paper>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default HistoryUpload;\r\n","import React, { useEffect, Fragment } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getLogsDelete } from \"../../actions/logActions\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Grid,\r\n  Breadcrumbs,\r\n  Typography,\r\n} from \"@material-ui/core/\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport useStyles from \"../../style/StyleFiles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport FileType from \"../filetype/Filetypes\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nconst HistoryDelete = (props) => {\r\n  const classes = useStyles();\r\n  const { logsdelete, loading } = useSelector((state) => state.log);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { authenticated, authdata } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    dispatch(getLogsDelete());\r\n    if (authenticated) {\r\n      if (authdata.authorized_id == 1) {\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid container className={classes.gridContainer}>\r\n        <Paper className={classes.paper}>\r\n          <Grid container>\r\n            <Breadcrumbs\r\n              className={classes.breadcrumbs}\r\n              separator={\r\n                <NavigateNextIcon className={classes.NavigateNextIcon} />\r\n              }\r\n              aria-label=\"breadcrumb\"\r\n            >\r\n              <Typography className={classes.text} color=\"textPrimary\">\r\n                ประวัติการลบ\r\n              </Typography>\r\n            </Breadcrumbs>\r\n          </Grid>\r\n        </Paper>\r\n\r\n        <Paper className={classes.paper}>\r\n          <Hidden smDown>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className={classes.tableCellName}>\r\n                    <Typography color=\"textPrimary\" className={classes.text}>\r\n                      ชื่อไฟล์\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Typography color=\"textPrimary\" className={classes.text}>\r\n                      ชื่อโฟลเดอร์\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Typography color=\"textPrimary\" className={classes.text}>\r\n                      วันที่ลบ\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Typography color=\"textPrimary\" className={classes.text}>\r\n                      ผู้ลบ\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!loading && logsdelete !== null\r\n                  ? logsdelete.map((log) => (\r\n                    <TableRow key={log.file_id} hover>\r\n                      <TableCell>\r\n                        <Grid container className={classes.iconAlign}>\r\n                          <Grid>\r\n                            <FileType typefile={log.file_name} />\r\n                          </Grid>\r\n                          <Grid>\r\n                            <Typography\r\n                              color=\"textPrimary\"\r\n                              className={classes.text}\r\n                            >\r\n                              {log.file_name}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <Typography className={classes.text}>\r\n                          {log.folder_name}\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <Typography className={classes.text}>\r\n                          {moment\r\n                            .utc(log.file_deleted)\r\n                            .add(3, \"minutes\")\r\n                            .format(\"DD-MM-YYYY HH:mm\")}\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <Typography className={classes.text}>\r\n                          {log.del_user_firstname} {log.del_user_lastname}\r\n                        </Typography>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n                  : null}\r\n              </TableBody>\r\n            </Table>\r\n          </Hidden>\r\n          <Hidden mdUp>\r\n            <Table>\r\n              <TableBody>\r\n                {!loading && logsdelete !== null\r\n                  ? logsdelete.map((log) => (\r\n                    <TableRow key={log.file_id} hover>\r\n                      <TableCell>\r\n                        <Grid container className={classes.iconAlign}>\r\n                          <Grid>\r\n                            <FileType typefile={log.file_name} />\r\n                          </Grid>\r\n                          <Grid>\r\n                            <Typography\r\n                              color=\"textPrimary\"\r\n                              className={classes.text}\r\n                            >\r\n                              {log.file_name}\r\n                            </Typography>\r\n                            <Hidden xsDown>\r\n                              <Grid container direction=\"row\">\r\n                                <Grid>\r\n                                  <Typography className={classes.textDate} style={{ marginRight: 10 }}>\r\n                                    <ScheduleIcon\r\n                                      className={classes.iconHistory}\r\n                                    />\r\n                                    {moment\r\n                                      .utc(log.file_created)\r\n                                      .add(3, \"minutes\")\r\n                                      .format(\"DD-MM-YYYY HH:mm\")}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid>\r\n                                  <Typography className={classes.textDate} style={{ marginRight: 10 }}>\r\n                                    <FolderIcon className={classes.iconHistory} />\r\n                                    {log.folder_name}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid>\r\n                                  <Typography className={classes.textDate} style={{ marginRight: 10 }}>\r\n                                    <PersonIcon className={classes.iconHistory} />\r\n                                    {log.user_firstname} {log.user_lastname}\r\n                                  </Typography>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Hidden>\r\n                            <Hidden smUp>\r\n                              <Grid >\r\n                                <Typography className={classes.textDate}>\r\n                                  <ScheduleIcon\r\n                                    className={classes.iconHistory}\r\n                                  />\r\n                                  {moment\r\n                                    .utc(log.file_created)\r\n                                    .add(3, \"minutes\")\r\n                                    .format(\"DD-MM-YYYY HH:mm\")}\r\n                                </Typography>\r\n                                <Typography className={classes.textDate}>\r\n                                  <FolderIcon className={classes.iconHistory} />\r\n                                  {log.folder_name}\r\n                                </Typography>\r\n                                <Typography className={classes.textDate}>\r\n                                  <PersonIcon className={classes.iconHistory} />\r\n                                  {log.user_firstname} {log.user_lastname}\r\n                                </Typography>\r\n                              </Grid>\r\n                            </Hidden>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n                  : null}\r\n              </TableBody>\r\n            </Table>\r\n          </Hidden>\r\n\r\n          {logsdelete === null ? (\r\n            <Table>\r\n              <TableRow>\r\n                <TableCell className={classes.emptyTable}>\r\n                  <Typography>{\" ไม่มีประวัติการลบเอกสาร \"}</Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            </Table>\r\n          ) : null}\r\n          {loading && (\r\n            <div className={classes.loading}>\r\n              <CircularProgress />\r\n            </div>\r\n          )}\r\n        </Paper>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default HistoryDelete;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Grid,\r\n  Breadcrumbs,\r\n  Typography,\r\n  Tab,\r\n} from '@material-ui/core/';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport ConfirmDownload from '../modal/ConfirmDowload';\r\nimport useStyles from '../../style/StyleFiles';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport SearchMain from './SearchMain';\r\nimport FileType from '../filetype/Filetypes'\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nconst SearchFiles = () => {\r\n  const classes = useStyles();\r\n  const { loading, searchfiles } = useSelector((state) => state.search);\r\n\r\n  return (\r\n    <div>\r\n      <Grid container className={classes.gridContainer}>\r\n        <Paper className={classes.paper}>\r\n          <Grid container>\r\n            <Breadcrumbs\r\n              className={classes.breadcrumbs}\r\n              separator={\r\n                <NavigateNextIcon className={classes.NavigateNextIcon} />\r\n              }\r\n              aria-label='breadcrumb'\r\n            >\r\n              <Typography className={classes.text}>ค้นหา</Typography>\r\n            </Breadcrumbs>\r\n          </Grid>\r\n        </Paper>\r\n\r\n        <Paper className={classes.paper}>\r\n          {/* <SearchMain /> */}\r\n          <Hidden smDown>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className={classes.tableCellName}>\r\n                    <Typography color='textPrimary' className={classes.text}>\r\n                      ชื่อไฟล์\r\n                  </Typography>\r\n                  </TableCell>\r\n                  <TableCell align='center'>\r\n                    <Typography color='textPrimary' className={classes.text}>\r\n                      ชื่อโฟลเดอร์\r\n                  </Typography>\r\n                  </TableCell>\r\n                  <TableCell align='center'>\r\n                    <Typography color='textPrimary' className={classes.text}>\r\n                      วันที่อัพโหลด\r\n                  </Typography>\r\n                  </TableCell>\r\n                  <TableCell align='center'>\r\n                    <Typography color='textPrimary' className={classes.text}>\r\n                      ผู้อัพโหลด\r\n                  </Typography>\r\n                  </TableCell>\r\n                  <TableCell align='center'>\r\n                    <Typography color='textPrimary' className={classes.text}>\r\n                      ดาวน์โหลด\r\n                  </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {loading !== true && searchfiles !== null\r\n                  ? searchfiles.map((file, index) => (\r\n                    <TableRow key={index} hover>\r\n                      <TableCell>\r\n                        <Grid container className={classes.iconAlign}>\r\n                          <Grid>\r\n                            <FileType typefile={file.file_data.file_name} />\r\n                          </Grid>\r\n                          <Grid>\r\n                            <Typography\r\n                              color='textPrimary'\r\n                              className={classes.text}\r\n                            >\r\n                              {file.file_data.file_name}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <Typography className={classes.text}>\r\n                          {file.file_data.folder_name}\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <Typography className={classes.text}>\r\n                          {moment\r\n                            .utc(file.file_data.file_created)\r\n                            .add(3, 'minutes')\r\n                            .format('DD-MM-YYYY HH:mm')}\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <Typography className={classes.text}>\r\n                          {file.file_data.user_firstname}\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        {file.access_download ? (\r\n                          <ConfirmDownload\r\n                            filename={file.file_data.file_name}\r\n                            fileid={file.file_data.file_id}\r\n                          />\r\n                        ) : (\r\n                            <GetAppIcon color='disabled' />\r\n                          )}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n                  : console.log('folder empty')}\r\n              </TableBody>\r\n            </Table>\r\n          </Hidden>\r\n          <Hidden mdUp>\r\n            <Table>\r\n              <TableBody >\r\n                {loading !== true && searchfiles !== null\r\n                  ? searchfiles.map((file, index) => (\r\n                    <TableRow key={index} hover>\r\n                      <TableCell>\r\n                        <Grid container className={classes.iconAlign}>\r\n                          <Grid>\r\n                            <FileType typefile={file.file_data.file_name} />\r\n                          </Grid>\r\n                          <Grid >\r\n                            <div className={classes.nowrap}>\r\n                              <Box className={classes.nowrapText} textOverflow=\"ellipsis\"\r\n                                overflow=\"hidden\">\r\n                                {file.file_data.file_name}\r\n                              </Box>\r\n                            </div>\r\n                            <Hidden xsDown>\r\n                              <Grid container direction=\"row\">\r\n                                <Grid>\r\n                                  <Typography className={classes.textDate} style={{ marginRight: 10 }}>\r\n                                    <ScheduleIcon\r\n                                      className={classes.iconHistory}\r\n                                    />\r\n                                    {moment\r\n                                      .utc(file.file_data.file_created)\r\n                                      .add(3, \"minutes\")\r\n                                      .format(\"DD-MM-YYYY HH:mm\")}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid>\r\n                                  <Typography className={classes.textDate} style={{ marginRight: 10 }}>\r\n                                    <FolderIcon className={classes.iconHistory} />\r\n                                    {file.file_data.folder_name}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid>\r\n                                  <Typography className={classes.textDate} style={{ marginRight: 10 }}>\r\n                                    <PersonIcon className={classes.iconHistory} />\r\n                                    {file.file_data.user_firstname} {file.file_data.user_lastname}\r\n                                  </Typography>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Hidden>\r\n                            <Hidden smUp>\r\n                              <Grid >\r\n                                <Typography className={classes.textDate}>\r\n                                  <ScheduleIcon\r\n                                    className={classes.iconHistory}\r\n                                  />\r\n                                  {moment\r\n                                    .utc(file.file_data.file_created)\r\n                                    .add(3, \"minutes\")\r\n                                    .format(\"DD-MM-YYYY HH:mm\")}\r\n                                </Typography>\r\n                                <Typography className={classes.textDate}>\r\n                                  <FolderIcon className={classes.iconHistory} />\r\n                                  {file.file_data.folder_name}\r\n                                </Typography>\r\n                                <Typography className={classes.textDate}>\r\n                                  <PersonIcon className={classes.iconHistory} />\r\n                                  {file.file_data.user_firstname} {file.file_data.user_lastname}\r\n                                </Typography>\r\n                              </Grid>\r\n                            </Hidden>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        {file.access_download ? (\r\n                          <ConfirmDownload\r\n                            filename={file.file_data.file_name}\r\n                            fileid={file.file_data.file_id}\r\n                          />\r\n                        ) : (\r\n                            <GetAppIcon color='disabled' />\r\n                          )}\r\n                      </TableCell>\r\n\r\n                    </TableRow>\r\n                  ))\r\n                  : console.log('folder empty')}\r\n              </TableBody>\r\n            </Table>\r\n          </Hidden>\r\n          {searchfiles === null ? (\r\n            <Table>\r\n              <TableRow>\r\n                <TableCell className={classes.emptyTable}>\r\n                  <Typography>{' ไม่พบข้อมูล '}</Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            </Table>\r\n          ) : (\r\n              console.log('folder empty')\r\n            )}\r\n        </Paper>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchFiles;\r\n","import React from 'react';\r\nimport SearchFiles from '../search/SearchFiles';\r\nconst Search = () => {\r\n  return (\r\n    <div>\r\n      <SearchFiles />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { Fragment } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Home from './components/pages/Home';\r\nimport SignIn from './components/authen/SignIn';\r\nimport ViewFiles from './components/files/ViewFiles';\r\nimport ViewFolderAdmin from './components/files/ViewFolderAdmin';\r\nimport AddFolder from './components/modal/AddFolder';\r\nimport Registor from './components/authen/Registor';\r\nimport ViewFilesAdmin from './components/files/ViewFilesAdmin';\r\nimport ManageUserFirst from './components/files/ManageUserFirst';\r\nimport ManageUserSecond from './components/files/ManageUserSecond';\r\nimport Dowload from './components/modal/Dowload';\r\nimport ConfirmDowload from './components/modal/ConfirmDowload';\r\nimport NotFound from './components/pages/Notfound';\r\nimport HistoryUpload from './components/history/HistoryUpload';\r\n\r\nimport {\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n  MuiThemeProvider,\r\n} from '@material-ui/core/styles'; //Google fonts\r\nimport { SnackbarProvider } from 'notistack';\r\nimport HistoryDelete from './components/history/HistoryDelete';\r\nimport Search from './components/pages/Search';\r\n\r\nconst token = localStorage.getItem('authData');\r\nconst tokenParse = JSON.parse(token);\r\n\r\nif (tokenParse) {\r\n  store.dispatch({\r\n    type: 'AUTH_USER',\r\n    payload: tokenParse,\r\n  });\r\n}\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: ['\"Sarabun\"'].join(','),\r\n  },\r\n  overrides: {\r\n    MuiTableCell: {\r\n      root: {\r\n        paddingTop: 6,\r\n        paddingBottom: 6,\r\n        ['@media (max-width:600px)']: {\r\n          paddingTop: 8,\r\n          paddingBottom: 8,\r\n          manage: {\r\n            paddingLeft: 0,\r\n            paddingRigth: 0,\r\n          }\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <SnackbarProvider maxSnack={3}>\r\n          <Router>\r\n            <Navbar />\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path='/viewfolderadmin'\r\n                children={<ViewFolderAdmin />}\r\n              />\r\n              <Route\r\n                exact\r\n                path='/manageuserfirst'\r\n                component={ManageUserFirst}\r\n              />\r\n              <Route\r\n                exact\r\n                path='/manageusersecond/:user_id'\r\n                component={ManageUserSecond}\r\n              />\r\n              <Route exact path='/signin' component={SignIn} />\r\n              <Route exact path='/' component={Home} />\r\n              <Route exact path='/ViewFiles/:folder_id' component={ViewFiles} />\r\n              <Route\r\n                exact\r\n                path='/viewfilesadmin/:folder_id'\r\n                component={ViewFilesAdmin}\r\n              />\r\n              <Route exact path='/historyupload' component={HistoryUpload} />\r\n              <Route exact path='/historydelete' component={HistoryDelete} />\r\n              <Route exact path='/search' component={Search} />\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          </Router>\r\n        </SnackbarProvider>\r\n      </ThemeProvider>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/user.15eeae14.svg\";"],"sourceRoot":""}